// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: countries/countries.proto

package countries

import (
	pagination "github.com/chains-lab/cities-dir-proto/gen/go/common/pagination"
	userdata "github.com/chains-lab/cities-dir-proto/gen/go/common/userdata"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCountryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Initiator     *userdata.UserData     `protobuf:"bytes,1,opt,name=initiator,proto3" json:"initiator,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCountryRequest) Reset() {
	*x = CreateCountryRequest{}
	mi := &file_countries_countries_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCountryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCountryRequest) ProtoMessage() {}

func (x *CreateCountryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCountryRequest.ProtoReflect.Descriptor instead.
func (*CreateCountryRequest) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCountryRequest) GetInitiator() *userdata.UserData {
	if x != nil {
		return x.Initiator
	}
	return nil
}

func (x *CreateCountryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCountryRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateCountryNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Initiator     *userdata.UserData     `protobuf:"bytes,1,opt,name=initiator,proto3" json:"initiator,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCountryNameRequest) Reset() {
	*x = UpdateCountryNameRequest{}
	mi := &file_countries_countries_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCountryNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCountryNameRequest) ProtoMessage() {}

func (x *UpdateCountryNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCountryNameRequest.ProtoReflect.Descriptor instead.
func (*UpdateCountryNameRequest) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateCountryNameRequest) GetInitiator() *userdata.UserData {
	if x != nil {
		return x.Initiator
	}
	return nil
}

func (x *UpdateCountryNameRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateCountryNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteCountryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Initiator     *userdata.UserData     `protobuf:"bytes,1,opt,name=initiator,proto3" json:"initiator,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCountryRequest) Reset() {
	*x = DeleteCountryRequest{}
	mi := &file_countries_countries_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCountryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCountryRequest) ProtoMessage() {}

func (x *DeleteCountryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCountryRequest.ProtoReflect.Descriptor instead.
func (*DeleteCountryRequest) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteCountryRequest) GetInitiator() *userdata.UserData {
	if x != nil {
		return x.Initiator
	}
	return nil
}

func (x *DeleteCountryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCountryByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCountryByIdRequest) Reset() {
	*x = GetCountryByIdRequest{}
	mi := &file_countries_countries_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCountryByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountryByIdRequest) ProtoMessage() {}

func (x *GetCountryByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountryByIdRequest.ProtoReflect.Descriptor instead.
func (*GetCountryByIdRequest) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{3}
}

func (x *GetCountryByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateCountryStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Initiator     *userdata.UserData     `protobuf:"bytes,1,opt,name=initiator,proto3" json:"initiator,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCountryStatusRequest) Reset() {
	*x = UpdateCountryStatusRequest{}
	mi := &file_countries_countries_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCountryStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCountryStatusRequest) ProtoMessage() {}

func (x *UpdateCountryStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCountryStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateCountryStatusRequest) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateCountryStatusRequest) GetInitiator() *userdata.UserData {
	if x != nil {
		return x.Initiator
	}
	return nil
}

func (x *UpdateCountryStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateCountryStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SearchCountriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NameLike      string                 `protobuf:"bytes,1,opt,name=name_like,json=nameLike,proto3" json:"name_like,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Pagination    *pagination.Request    `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchCountriesRequest) Reset() {
	*x = SearchCountriesRequest{}
	mi := &file_countries_countries_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchCountriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCountriesRequest) ProtoMessage() {}

func (x *SearchCountriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCountriesRequest.ProtoReflect.Descriptor instead.
func (*SearchCountriesRequest) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{5}
}

func (x *SearchCountriesRequest) GetNameLike() string {
	if x != nil {
		return x.NameLike
	}
	return ""
}

func (x *SearchCountriesRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SearchCountriesRequest) GetPagination() *pagination.Request {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type Country struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Country) Reset() {
	*x = Country{}
	mi := &file_countries_countries_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Country) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Country) ProtoMessage() {}

func (x *Country) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Country.ProtoReflect.Descriptor instead.
func (*Country) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{6}
}

func (x *Country) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Country) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Country) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type CountriesList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Countries     []*Country             `protobuf:"bytes,1,rep,name=countries,proto3" json:"countries,omitempty"`
	Pagination    *pagination.Response   `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountriesList) Reset() {
	*x = CountriesList{}
	mi := &file_countries_countries_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountriesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountriesList) ProtoMessage() {}

func (x *CountriesList) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountriesList.ProtoReflect.Descriptor instead.
func (*CountriesList) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{7}
}

func (x *CountriesList) GetCountries() []*Country {
	if x != nil {
		return x.Countries
	}
	return nil
}

func (x *CountriesList) GetPagination() *pagination.Response {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_countries_countries_proto protoreflect.FileDescriptor

const file_countries_countries_proto_rawDesc = "" +
	"\n" +
	"\x19countries/countries.proto\x12\tcountries\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1ecommon/userdata/userdata.proto\x1a\"common/pagination/pagination.proto\"t\n" +
	"\x14CreateCountryRequest\x120\n" +
	"\tinitiator\x18\x01 \x01(\v2\x12.userdata.UserDataR\tinitiator\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\"p\n" +
	"\x18UpdateCountryNameRequest\x120\n" +
	"\tinitiator\x18\x01 \x01(\v2\x12.userdata.UserDataR\tinitiator\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\"X\n" +
	"\x14DeleteCountryRequest\x120\n" +
	"\tinitiator\x18\x01 \x01(\v2\x12.userdata.UserDataR\tinitiator\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"'\n" +
	"\x15GetCountryByIdRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"v\n" +
	"\x1aUpdateCountryStatusRequest\x120\n" +
	"\tinitiator\x18\x01 \x01(\v2\x12.userdata.UserDataR\tinitiator\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\"\x82\x01\n" +
	"\x16SearchCountriesRequest\x12\x1b\n" +
	"\tname_like\x18\x01 \x01(\tR\bnameLike\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x123\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2\x13.pagination.RequestR\n" +
	"pagination\"E\n" +
	"\aCountry\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\"w\n" +
	"\rCountriesList\x120\n" +
	"\tcountries\x18\x01 \x03(\v2\x12.countries.CountryR\tcountries\x124\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x14.pagination.ResponseR\n" +
	"pagination2\xd8\x03\n" +
	"\x0eCountryService\x12D\n" +
	"\rCreateCountry\x12\x1f.countries.CreateCountryRequest\x1a\x12.countries.Country\x12F\n" +
	"\x0eGetCountryById\x12 .countries.GetCountryByIdRequest\x1a\x12.countries.Country\x12H\n" +
	"\rDeleteCountry\x12\x1f.countries.DeleteCountryRequest\x1a\x16.google.protobuf.Empty\x12L\n" +
	"\x11UpdateCountryName\x12#.countries.UpdateCountryNameRequest\x1a\x12.countries.Country\x12P\n" +
	"\x13UpdateCountryStatus\x12%.countries.UpdateCountryStatusRequest\x1a\x12.countries.Country\x12N\n" +
	"\x0fSearchCountries\x12!.countries.SearchCountriesRequest\x1a\x18.countries.CountriesListBCZAgithub.com/chains-lab/cities-dir-proto/gen/go/countries;countriesb\x06proto3"

var (
	file_countries_countries_proto_rawDescOnce sync.Once
	file_countries_countries_proto_rawDescData []byte
)

func file_countries_countries_proto_rawDescGZIP() []byte {
	file_countries_countries_proto_rawDescOnce.Do(func() {
		file_countries_countries_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_countries_countries_proto_rawDesc), len(file_countries_countries_proto_rawDesc)))
	})
	return file_countries_countries_proto_rawDescData
}

var file_countries_countries_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_countries_countries_proto_goTypes = []any{
	(*CreateCountryRequest)(nil),       // 0: countries.CreateCountryRequest
	(*UpdateCountryNameRequest)(nil),   // 1: countries.UpdateCountryNameRequest
	(*DeleteCountryRequest)(nil),       // 2: countries.DeleteCountryRequest
	(*GetCountryByIdRequest)(nil),      // 3: countries.GetCountryByIdRequest
	(*UpdateCountryStatusRequest)(nil), // 4: countries.UpdateCountryStatusRequest
	(*SearchCountriesRequest)(nil),     // 5: countries.SearchCountriesRequest
	(*Country)(nil),                    // 6: countries.Country
	(*CountriesList)(nil),              // 7: countries.CountriesList
	(*userdata.UserData)(nil),          // 8: userdata.UserData
	(*pagination.Request)(nil),         // 9: pagination.Request
	(*pagination.Response)(nil),        // 10: pagination.Response
	(*emptypb.Empty)(nil),              // 11: google.protobuf.Empty
}
var file_countries_countries_proto_depIdxs = []int32{
	8,  // 0: countries.CreateCountryRequest.initiator:type_name -> userdata.UserData
	8,  // 1: countries.UpdateCountryNameRequest.initiator:type_name -> userdata.UserData
	8,  // 2: countries.DeleteCountryRequest.initiator:type_name -> userdata.UserData
	8,  // 3: countries.UpdateCountryStatusRequest.initiator:type_name -> userdata.UserData
	9,  // 4: countries.SearchCountriesRequest.pagination:type_name -> pagination.Request
	6,  // 5: countries.CountriesList.countries:type_name -> countries.Country
	10, // 6: countries.CountriesList.pagination:type_name -> pagination.Response
	0,  // 7: countries.CountryService.CreateCountry:input_type -> countries.CreateCountryRequest
	3,  // 8: countries.CountryService.GetCountryById:input_type -> countries.GetCountryByIdRequest
	2,  // 9: countries.CountryService.DeleteCountry:input_type -> countries.DeleteCountryRequest
	1,  // 10: countries.CountryService.UpdateCountryName:input_type -> countries.UpdateCountryNameRequest
	4,  // 11: countries.CountryService.UpdateCountryStatus:input_type -> countries.UpdateCountryStatusRequest
	5,  // 12: countries.CountryService.SearchCountries:input_type -> countries.SearchCountriesRequest
	6,  // 13: countries.CountryService.CreateCountry:output_type -> countries.Country
	6,  // 14: countries.CountryService.GetCountryById:output_type -> countries.Country
	11, // 15: countries.CountryService.DeleteCountry:output_type -> google.protobuf.Empty
	6,  // 16: countries.CountryService.UpdateCountryName:output_type -> countries.Country
	6,  // 17: countries.CountryService.UpdateCountryStatus:output_type -> countries.Country
	7,  // 18: countries.CountryService.SearchCountries:output_type -> countries.CountriesList
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_countries_countries_proto_init() }
func file_countries_countries_proto_init() {
	if File_countries_countries_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_countries_countries_proto_rawDesc), len(file_countries_countries_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_countries_countries_proto_goTypes,
		DependencyIndexes: file_countries_countries_proto_depIdxs,
		MessageInfos:      file_countries_countries_proto_msgTypes,
	}.Build()
	File_countries_countries_proto = out.File
	file_countries_countries_proto_goTypes = nil
	file_countries_countries_proto_depIdxs = nil
}
