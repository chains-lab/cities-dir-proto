// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: cities.proto

package svc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCityByAdminRequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CountryId string `protobuf:"bytes,2,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
	Status    string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CreateCityByAdminRequestMessage) Reset() {
	*x = CreateCityByAdminRequestMessage{}
	mi := &file_cities_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCityByAdminRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCityByAdminRequestMessage) ProtoMessage() {}

func (x *CreateCityByAdminRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cities_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCityByAdminRequestMessage.ProtoReflect.Descriptor instead.
func (*CreateCityByAdminRequestMessage) Descriptor() ([]byte, []int) {
	return file_cities_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCityByAdminRequestMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCityByAdminRequestMessage) GetCountryId() string {
	if x != nil {
		return x.CountryId
	}
	return ""
}

func (x *CreateCityByAdminRequestMessage) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DeleteCityByAdminRequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCityByAdminRequestMessage) Reset() {
	*x = DeleteCityByAdminRequestMessage{}
	mi := &file_cities_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCityByAdminRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCityByAdminRequestMessage) ProtoMessage() {}

func (x *DeleteCityByAdminRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cities_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCityByAdminRequestMessage.ProtoReflect.Descriptor instead.
func (*DeleteCityByAdminRequestMessage) Descriptor() ([]byte, []int) {
	return file_cities_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteCityByAdminRequestMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCityByIdRequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCityByIdRequestMessage) Reset() {
	*x = GetCityByIdRequestMessage{}
	mi := &file_cities_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCityByIdRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCityByIdRequestMessage) ProtoMessage() {}

func (x *GetCityByIdRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cities_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCityByIdRequestMessage.ProtoReflect.Descriptor instead.
func (*GetCityByIdRequestMessage) Descriptor() ([]byte, []int) {
	return file_cities_proto_rawDescGZIP(), []int{2}
}

func (x *GetCityByIdRequestMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SearchCitiesRequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameLike   *string            `protobuf:"bytes,1,opt,name=name_like,json=nameLike,proto3,oneof" json:"name_like,omitempty"`
	CountryId  *string            `protobuf:"bytes,2,opt,name=country_id,json=countryId,proto3,oneof" json:"country_id,omitempty"`
	Status     *string            `protobuf:"bytes,3,opt,name=status,proto3,oneof" json:"status,omitempty"`
	Pagination *PaginationRequest `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SearchCitiesRequestMessage) Reset() {
	*x = SearchCitiesRequestMessage{}
	mi := &file_cities_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchCitiesRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCitiesRequestMessage) ProtoMessage() {}

func (x *SearchCitiesRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cities_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCitiesRequestMessage.ProtoReflect.Descriptor instead.
func (*SearchCitiesRequestMessage) Descriptor() ([]byte, []int) {
	return file_cities_proto_rawDescGZIP(), []int{3}
}

func (x *SearchCitiesRequestMessage) GetNameLike() string {
	if x != nil && x.NameLike != nil {
		return *x.NameLike
	}
	return ""
}

func (x *SearchCitiesRequestMessage) GetCountryId() string {
	if x != nil && x.CountryId != nil {
		return *x.CountryId
	}
	return ""
}

func (x *SearchCitiesRequestMessage) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *SearchCitiesRequestMessage) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type UpdateCityStatusRequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateCityStatusRequestMessage) Reset() {
	*x = UpdateCityStatusRequestMessage{}
	mi := &file_cities_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCityStatusRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCityStatusRequestMessage) ProtoMessage() {}

func (x *UpdateCityStatusRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cities_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCityStatusRequestMessage.ProtoReflect.Descriptor instead.
func (*UpdateCityStatusRequestMessage) Descriptor() ([]byte, []int) {
	return file_cities_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateCityStatusRequestMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateCityStatusRequestMessage) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateCityNameRequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateCityNameRequestMessage) Reset() {
	*x = UpdateCityNameRequestMessage{}
	mi := &file_cities_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCityNameRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCityNameRequestMessage) ProtoMessage() {}

func (x *UpdateCityNameRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cities_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCityNameRequestMessage.ProtoReflect.Descriptor instead.
func (*UpdateCityNameRequestMessage) Descriptor() ([]byte, []int) {
	return file_cities_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateCityNameRequestMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateCityNameRequestMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type City struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CountryId string `protobuf:"bytes,3,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
	Status    string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *City) Reset() {
	*x = City{}
	mi := &file_cities_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *City) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*City) ProtoMessage() {}

func (x *City) ProtoReflect() protoreflect.Message {
	mi := &file_cities_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use City.ProtoReflect.Descriptor instead.
func (*City) Descriptor() ([]byte, []int) {
	return file_cities_proto_rawDescGZIP(), []int{6}
}

func (x *City) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *City) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *City) GetCountryId() string {
	if x != nil {
		return x.CountryId
	}
	return ""
}

func (x *City) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ListCities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cities     []*City             `protobuf:"bytes,1,rep,name=cities,proto3" json:"cities,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListCities) Reset() {
	*x = ListCities{}
	mi := &file_cities_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCities) ProtoMessage() {}

func (x *ListCities) ProtoReflect() protoreflect.Message {
	mi := &file_cities_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCities.ProtoReflect.Descriptor instead.
func (*ListCities) Descriptor() ([]byte, []int) {
	return file_cities_proto_rawDescGZIP(), []int{7}
}

func (x *ListCities) GetCities() []*City {
	if x != nil {
		return x.Cities
	}
	return nil
}

func (x *ListCities) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_cities_proto protoreflect.FileDescriptor

var file_cities_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x64, 0x69, 0x72, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6c, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x69, 0x74, 0x79, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x31, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x69, 0x74, 0x79, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43,
	0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe5, 0x01, 0x0a, 0x1a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6b,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x4c,
	0x69, 0x6b, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x64, 0x69, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6c,
	0x69, 0x6b, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x48, 0x0a,
	0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x42, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x61, 0x0a, 0x04, 0x43,
	0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x74,
	0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x06,
	0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x64, 0x69, 0x72, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x52, 0x06, 0x63,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x64, 0x69, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0xe4, 0x03, 0x0a, 0x06, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x50, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x69, 0x74, 0x79, 0x42, 0x79, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x12, 0x2a, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x64, 0x69, 0x72,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x69, 0x74, 0x79, 0x42, 0x79, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x0f, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x64, 0x69, 0x72, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x12, 0x44, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64,
	0x12, 0x24, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x64, 0x69, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0f, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x64,
	0x69, 0x72, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x64, 0x69, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x15,
	0x2e, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x64, 0x69, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x2e, 0x63, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x64, 0x69, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x69, 0x74, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x0f, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x64, 0x69, 0x72,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x64, 0x69, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x69, 0x74, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x0f, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x64, 0x69, 0x72, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x12, 0x58, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x69, 0x74, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x53, 0x79, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12,
	0x29, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x64, 0x69, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0f, 0x2e, 0x63, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x64, 0x69, 0x72, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x42, 0x37, 0x5a, 0x35, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73,
	0x2d, 0x6c, 0x61, 0x62, 0x2f, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2d, 0x64, 0x69, 0x72, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x76, 0x63,
	0x3b, 0x73, 0x76, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cities_proto_rawDescOnce sync.Once
	file_cities_proto_rawDescData = file_cities_proto_rawDesc
)

func file_cities_proto_rawDescGZIP() []byte {
	file_cities_proto_rawDescOnce.Do(func() {
		file_cities_proto_rawDescData = protoimpl.X.CompressGZIP(file_cities_proto_rawDescData)
	})
	return file_cities_proto_rawDescData
}

var file_cities_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_cities_proto_goTypes = []any{
	(*CreateCityByAdminRequestMessage)(nil), // 0: citiesdir.CreateCityByAdminRequestMessage
	(*DeleteCityByAdminRequestMessage)(nil), // 1: citiesdir.DeleteCityByAdminRequestMessage
	(*GetCityByIdRequestMessage)(nil),       // 2: citiesdir.GetCityByIdRequestMessage
	(*SearchCitiesRequestMessage)(nil),      // 3: citiesdir.SearchCitiesRequestMessage
	(*UpdateCityStatusRequestMessage)(nil),  // 4: citiesdir.UpdateCityStatusRequestMessage
	(*UpdateCityNameRequestMessage)(nil),    // 5: citiesdir.UpdateCityNameRequestMessage
	(*City)(nil),                            // 6: citiesdir.City
	(*ListCities)(nil),                      // 7: citiesdir.ListCities
	(*PaginationRequest)(nil),               // 8: citiesdir.PaginationRequest
	(*PaginationResponse)(nil),              // 9: citiesdir.PaginationResponse
}
var file_cities_proto_depIdxs = []int32{
	8, // 0: citiesdir.SearchCitiesRequestMessage.pagination:type_name -> citiesdir.PaginationRequest
	6, // 1: citiesdir.ListCities.cities:type_name -> citiesdir.City
	9, // 2: citiesdir.ListCities.pagination:type_name -> citiesdir.PaginationResponse
	0, // 3: citiesdir.Cities.CreateCityByAdmin:input_type -> citiesdir.CreateCityByAdminRequestMessage
	2, // 4: citiesdir.Cities.GetCityById:input_type -> citiesdir.GetCityByIdRequestMessage
	3, // 5: citiesdir.Cities.SearchCities:input_type -> citiesdir.SearchCitiesRequestMessage
	4, // 6: citiesdir.Cities.UpdateCityStatus:input_type -> citiesdir.UpdateCityStatusRequestMessage
	5, // 7: citiesdir.Cities.UpdateCityName:input_type -> citiesdir.UpdateCityNameRequestMessage
	4, // 8: citiesdir.Cities.UpdateCityStatusBySysAdmin:input_type -> citiesdir.UpdateCityStatusRequestMessage
	6, // 9: citiesdir.Cities.CreateCityByAdmin:output_type -> citiesdir.City
	6, // 10: citiesdir.Cities.GetCityById:output_type -> citiesdir.City
	7, // 11: citiesdir.Cities.SearchCities:output_type -> citiesdir.ListCities
	6, // 12: citiesdir.Cities.UpdateCityStatus:output_type -> citiesdir.City
	6, // 13: citiesdir.Cities.UpdateCityName:output_type -> citiesdir.City
	6, // 14: citiesdir.Cities.UpdateCityStatusBySysAdmin:output_type -> citiesdir.City
	9, // [9:15] is the sub-list for method output_type
	3, // [3:9] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_cities_proto_init() }
func file_cities_proto_init() {
	if File_cities_proto != nil {
		return
	}
	file_common_proto_init()
	file_cities_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cities_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cities_proto_goTypes,
		DependencyIndexes: file_cities_proto_depIdxs,
		MessageInfos:      file_cities_proto_msgTypes,
	}.Build()
	File_cities_proto = out.File
	file_cities_proto_rawDesc = nil
	file_cities_proto_goTypes = nil
	file_cities_proto_depIdxs = nil
}
