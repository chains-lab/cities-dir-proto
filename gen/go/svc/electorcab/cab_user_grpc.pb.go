// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.21.12
// source: svc/electorcab/cab_user.proto

package electorcab

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	UserService_CreateOwnProfile_FullMethodName         = "/elector.UserService/CreateOwnProfile"
	UserService_GetOwnProfile_FullMethodName            = "/elector.UserService/GetOwnProfile"
	UserService_GetOwnCabinet_FullMethodName            = "/elector.UserService/GetOwnCabinet"
	UserService_GetCabinet_FullMethodName               = "/elector.UserService/GetCabinet"
	UserService_GetProfile_FullMethodName               = "/elector.UserService/GetProfile"
	UserService_UpdateOwnProfile_FullMethodName         = "/elector.UserService/UpdateOwnProfile"
	UserService_UpdateOwnUsername_FullMethodName        = "/elector.UserService/UpdateOwnUsername"
	UserService_UpdateOwnSex_FullMethodName             = "/elector.UserService/UpdateOwnSex"
	UserService_UpdateOwnBirthday_FullMethodName        = "/elector.UserService/UpdateOwnBirthday"
	UserService_UpdateOwnNationality_FullMethodName     = "/elector.UserService/UpdateOwnNationality"
	UserService_UpdateOwnPrimaryLanguage_FullMethodName = "/elector.UserService/UpdateOwnPrimaryLanguage"
	UserService_UpdateOwnResidence_FullMethodName       = "/elector.UserService/UpdateOwnResidence"
)

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UserServiceClient interface {
	// Own section
	CreateOwnProfile(ctx context.Context, in *CreateProfilrRequest, opts ...grpc.CallOption) (*Profile, error)
	GetOwnProfile(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Profile, error)
	GetOwnCabinet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Cabinet, error)
	// For other users
	GetCabinet(ctx context.Context, in *GetCabinetRequest, opts ...grpc.CallOption) (*Cabinet, error)
	GetProfile(ctx context.Context, in *GetProfileRequest, opts ...grpc.CallOption) (*Profile, error)
	// Profile
	UpdateOwnProfile(ctx context.Context, in *UpdateOwnProfileRequest, opts ...grpc.CallOption) (*Profile, error)
	UpdateOwnUsername(ctx context.Context, in *UpdateOwnUsernameRequest, opts ...grpc.CallOption) (*Profile, error)
	// Cabinet block
	//
	// Biography
	UpdateOwnSex(ctx context.Context, in *UpdateOwnSexRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateOwnBirthday(ctx context.Context, in *UpdateOwnBirthdayRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateOwnNationality(ctx context.Context, in *UpdateOwnNationalityRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateOwnPrimaryLanguage(ctx context.Context, in *UpdateOwnPrimaryLanguageRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateOwnResidence(ctx context.Context, in *UpdateOwnResidenceRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type userServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserServiceClient(cc grpc.ClientConnInterface) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) CreateOwnProfile(ctx context.Context, in *CreateProfilrRequest, opts ...grpc.CallOption) (*Profile, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Profile)
	err := c.cc.Invoke(ctx, UserService_CreateOwnProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetOwnProfile(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Profile, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Profile)
	err := c.cc.Invoke(ctx, UserService_GetOwnProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetOwnCabinet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Cabinet, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Cabinet)
	err := c.cc.Invoke(ctx, UserService_GetOwnCabinet_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetCabinet(ctx context.Context, in *GetCabinetRequest, opts ...grpc.CallOption) (*Cabinet, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Cabinet)
	err := c.cc.Invoke(ctx, UserService_GetCabinet_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetProfile(ctx context.Context, in *GetProfileRequest, opts ...grpc.CallOption) (*Profile, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Profile)
	err := c.cc.Invoke(ctx, UserService_GetProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateOwnProfile(ctx context.Context, in *UpdateOwnProfileRequest, opts ...grpc.CallOption) (*Profile, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Profile)
	err := c.cc.Invoke(ctx, UserService_UpdateOwnProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateOwnUsername(ctx context.Context, in *UpdateOwnUsernameRequest, opts ...grpc.CallOption) (*Profile, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Profile)
	err := c.cc.Invoke(ctx, UserService_UpdateOwnUsername_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateOwnSex(ctx context.Context, in *UpdateOwnSexRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, UserService_UpdateOwnSex_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateOwnBirthday(ctx context.Context, in *UpdateOwnBirthdayRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, UserService_UpdateOwnBirthday_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateOwnNationality(ctx context.Context, in *UpdateOwnNationalityRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, UserService_UpdateOwnNationality_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateOwnPrimaryLanguage(ctx context.Context, in *UpdateOwnPrimaryLanguageRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, UserService_UpdateOwnPrimaryLanguage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateOwnResidence(ctx context.Context, in *UpdateOwnResidenceRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, UserService_UpdateOwnResidence_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
// All implementations must embed UnimplementedUserServiceServer
// for forward compatibility.
type UserServiceServer interface {
	// Own section
	CreateOwnProfile(context.Context, *CreateProfilrRequest) (*Profile, error)
	GetOwnProfile(context.Context, *emptypb.Empty) (*Profile, error)
	GetOwnCabinet(context.Context, *emptypb.Empty) (*Cabinet, error)
	// For other users
	GetCabinet(context.Context, *GetCabinetRequest) (*Cabinet, error)
	GetProfile(context.Context, *GetProfileRequest) (*Profile, error)
	// Profile
	UpdateOwnProfile(context.Context, *UpdateOwnProfileRequest) (*Profile, error)
	UpdateOwnUsername(context.Context, *UpdateOwnUsernameRequest) (*Profile, error)
	// Cabinet block
	//
	// Biography
	UpdateOwnSex(context.Context, *UpdateOwnSexRequest) (*emptypb.Empty, error)
	UpdateOwnBirthday(context.Context, *UpdateOwnBirthdayRequest) (*emptypb.Empty, error)
	UpdateOwnNationality(context.Context, *UpdateOwnNationalityRequest) (*emptypb.Empty, error)
	UpdateOwnPrimaryLanguage(context.Context, *UpdateOwnPrimaryLanguageRequest) (*emptypb.Empty, error)
	UpdateOwnResidence(context.Context, *UpdateOwnResidenceRequest) (*emptypb.Empty, error)
	mustEmbedUnimplementedUserServiceServer()
}

// UnimplementedUserServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedUserServiceServer struct{}

func (UnimplementedUserServiceServer) CreateOwnProfile(context.Context, *CreateProfilrRequest) (*Profile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOwnProfile not implemented")
}
func (UnimplementedUserServiceServer) GetOwnProfile(context.Context, *emptypb.Empty) (*Profile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOwnProfile not implemented")
}
func (UnimplementedUserServiceServer) GetOwnCabinet(context.Context, *emptypb.Empty) (*Cabinet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOwnCabinet not implemented")
}
func (UnimplementedUserServiceServer) GetCabinet(context.Context, *GetCabinetRequest) (*Cabinet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCabinet not implemented")
}
func (UnimplementedUserServiceServer) GetProfile(context.Context, *GetProfileRequest) (*Profile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProfile not implemented")
}
func (UnimplementedUserServiceServer) UpdateOwnProfile(context.Context, *UpdateOwnProfileRequest) (*Profile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOwnProfile not implemented")
}
func (UnimplementedUserServiceServer) UpdateOwnUsername(context.Context, *UpdateOwnUsernameRequest) (*Profile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOwnUsername not implemented")
}
func (UnimplementedUserServiceServer) UpdateOwnSex(context.Context, *UpdateOwnSexRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOwnSex not implemented")
}
func (UnimplementedUserServiceServer) UpdateOwnBirthday(context.Context, *UpdateOwnBirthdayRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOwnBirthday not implemented")
}
func (UnimplementedUserServiceServer) UpdateOwnNationality(context.Context, *UpdateOwnNationalityRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOwnNationality not implemented")
}
func (UnimplementedUserServiceServer) UpdateOwnPrimaryLanguage(context.Context, *UpdateOwnPrimaryLanguageRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOwnPrimaryLanguage not implemented")
}
func (UnimplementedUserServiceServer) UpdateOwnResidence(context.Context, *UpdateOwnResidenceRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOwnResidence not implemented")
}
func (UnimplementedUserServiceServer) mustEmbedUnimplementedUserServiceServer() {}
func (UnimplementedUserServiceServer) testEmbeddedByValue()                     {}

// UnsafeUserServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UserServiceServer will
// result in compilation errors.
type UnsafeUserServiceServer interface {
	mustEmbedUnimplementedUserServiceServer()
}

func RegisterUserServiceServer(s grpc.ServiceRegistrar, srv UserServiceServer) {
	// If the following call pancis, it indicates UnimplementedUserServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&UserService_ServiceDesc, srv)
}

func _UserService_CreateOwnProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProfilrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreateOwnProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_CreateOwnProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreateOwnProfile(ctx, req.(*CreateProfilrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetOwnProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetOwnProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_GetOwnProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetOwnProfile(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetOwnCabinet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetOwnCabinet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_GetOwnCabinet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetOwnCabinet(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetCabinet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCabinetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetCabinet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_GetCabinet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetCabinet(ctx, req.(*GetCabinetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_GetProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetProfile(ctx, req.(*GetProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateOwnProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOwnProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateOwnProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_UpdateOwnProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateOwnProfile(ctx, req.(*UpdateOwnProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateOwnUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOwnUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateOwnUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_UpdateOwnUsername_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateOwnUsername(ctx, req.(*UpdateOwnUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateOwnSex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOwnSexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateOwnSex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_UpdateOwnSex_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateOwnSex(ctx, req.(*UpdateOwnSexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateOwnBirthday_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOwnBirthdayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateOwnBirthday(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_UpdateOwnBirthday_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateOwnBirthday(ctx, req.(*UpdateOwnBirthdayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateOwnNationality_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOwnNationalityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateOwnNationality(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_UpdateOwnNationality_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateOwnNationality(ctx, req.(*UpdateOwnNationalityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateOwnPrimaryLanguage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOwnPrimaryLanguageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateOwnPrimaryLanguage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_UpdateOwnPrimaryLanguage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateOwnPrimaryLanguage(ctx, req.(*UpdateOwnPrimaryLanguageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateOwnResidence_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOwnResidenceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateOwnResidence(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UserService_UpdateOwnResidence_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateOwnResidence(ctx, req.(*UpdateOwnResidenceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// UserService_ServiceDesc is the grpc.ServiceDesc for UserService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UserService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "elector.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOwnProfile",
			Handler:    _UserService_CreateOwnProfile_Handler,
		},
		{
			MethodName: "GetOwnProfile",
			Handler:    _UserService_GetOwnProfile_Handler,
		},
		{
			MethodName: "GetOwnCabinet",
			Handler:    _UserService_GetOwnCabinet_Handler,
		},
		{
			MethodName: "GetCabinet",
			Handler:    _UserService_GetCabinet_Handler,
		},
		{
			MethodName: "GetProfile",
			Handler:    _UserService_GetProfile_Handler,
		},
		{
			MethodName: "UpdateOwnProfile",
			Handler:    _UserService_UpdateOwnProfile_Handler,
		},
		{
			MethodName: "UpdateOwnUsername",
			Handler:    _UserService_UpdateOwnUsername_Handler,
		},
		{
			MethodName: "UpdateOwnSex",
			Handler:    _UserService_UpdateOwnSex_Handler,
		},
		{
			MethodName: "UpdateOwnBirthday",
			Handler:    _UserService_UpdateOwnBirthday_Handler,
		},
		{
			MethodName: "UpdateOwnNationality",
			Handler:    _UserService_UpdateOwnNationality_Handler,
		},
		{
			MethodName: "UpdateOwnPrimaryLanguage",
			Handler:    _UserService_UpdateOwnPrimaryLanguage_Handler,
		},
		{
			MethodName: "UpdateOwnResidence",
			Handler:    _UserService_UpdateOwnResidence_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "svc/electorcab/cab_user.proto",
}
