// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.21.12
// source: svc/electorcab/cab_admin.proto

package electorcab

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	AdminService_AdminGetCabinet_FullMethodName      = "/elector.AdminService/AdminGetCabinet"
	AdminService_AdminGetProfile_FullMethodName      = "/elector.AdminService/AdminGetProfile"
	AdminService_AdminUpdateProfile_FullMethodName   = "/elector.AdminService/AdminUpdateProfile"
	AdminService_AdminGetBiography_FullMethodName    = "/elector.AdminService/AdminGetBiography"
	AdminService_AdminUpdateBiography_FullMethodName = "/elector.AdminService/AdminUpdateBiography"
	AdminService_AdminGetJobResume_FullMethodName    = "/elector.AdminService/AdminGetJobResume"
	AdminService_AdminUpdateJobResume_FullMethodName = "/elector.AdminService/AdminUpdateJobResume"
)

// AdminServiceClient is the client API for AdminService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AdminServiceClient interface {
	AdminGetCabinet(ctx context.Context, in *AdminGetCabinetRequest, opts ...grpc.CallOption) (*Cabinet, error)
	AdminGetProfile(ctx context.Context, in *AdminGetProfileRequest, opts ...grpc.CallOption) (*Profile, error)
	AdminUpdateProfile(ctx context.Context, in *AdminUpdateProfileRequest, opts ...grpc.CallOption) (*Profile, error)
	AdminGetBiography(ctx context.Context, in *AdminGetBiographyRequest, opts ...grpc.CallOption) (*Biography, error)
	AdminUpdateBiography(ctx context.Context, in *AdminUpdateBiographyRequest, opts ...grpc.CallOption) (*Biography, error)
	AdminGetJobResume(ctx context.Context, in *AdminGetJobResumeRequest, opts ...grpc.CallOption) (*JobResume, error)
	AdminUpdateJobResume(ctx context.Context, in *AdminUpdateJobResumeRequest, opts ...grpc.CallOption) (*JobResume, error)
}

type adminServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAdminServiceClient(cc grpc.ClientConnInterface) AdminServiceClient {
	return &adminServiceClient{cc}
}

func (c *adminServiceClient) AdminGetCabinet(ctx context.Context, in *AdminGetCabinetRequest, opts ...grpc.CallOption) (*Cabinet, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Cabinet)
	err := c.cc.Invoke(ctx, AdminService_AdminGetCabinet_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) AdminGetProfile(ctx context.Context, in *AdminGetProfileRequest, opts ...grpc.CallOption) (*Profile, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Profile)
	err := c.cc.Invoke(ctx, AdminService_AdminGetProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) AdminUpdateProfile(ctx context.Context, in *AdminUpdateProfileRequest, opts ...grpc.CallOption) (*Profile, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Profile)
	err := c.cc.Invoke(ctx, AdminService_AdminUpdateProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) AdminGetBiography(ctx context.Context, in *AdminGetBiographyRequest, opts ...grpc.CallOption) (*Biography, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Biography)
	err := c.cc.Invoke(ctx, AdminService_AdminGetBiography_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) AdminUpdateBiography(ctx context.Context, in *AdminUpdateBiographyRequest, opts ...grpc.CallOption) (*Biography, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Biography)
	err := c.cc.Invoke(ctx, AdminService_AdminUpdateBiography_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) AdminGetJobResume(ctx context.Context, in *AdminGetJobResumeRequest, opts ...grpc.CallOption) (*JobResume, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(JobResume)
	err := c.cc.Invoke(ctx, AdminService_AdminGetJobResume_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) AdminUpdateJobResume(ctx context.Context, in *AdminUpdateJobResumeRequest, opts ...grpc.CallOption) (*JobResume, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(JobResume)
	err := c.cc.Invoke(ctx, AdminService_AdminUpdateJobResume_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminServiceServer is the server API for AdminService service.
// All implementations must embed UnimplementedAdminServiceServer
// for forward compatibility.
type AdminServiceServer interface {
	AdminGetCabinet(context.Context, *AdminGetCabinetRequest) (*Cabinet, error)
	AdminGetProfile(context.Context, *AdminGetProfileRequest) (*Profile, error)
	AdminUpdateProfile(context.Context, *AdminUpdateProfileRequest) (*Profile, error)
	AdminGetBiography(context.Context, *AdminGetBiographyRequest) (*Biography, error)
	AdminUpdateBiography(context.Context, *AdminUpdateBiographyRequest) (*Biography, error)
	AdminGetJobResume(context.Context, *AdminGetJobResumeRequest) (*JobResume, error)
	AdminUpdateJobResume(context.Context, *AdminUpdateJobResumeRequest) (*JobResume, error)
	mustEmbedUnimplementedAdminServiceServer()
}

// UnimplementedAdminServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedAdminServiceServer struct{}

func (UnimplementedAdminServiceServer) AdminGetCabinet(context.Context, *AdminGetCabinetRequest) (*Cabinet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminGetCabinet not implemented")
}
func (UnimplementedAdminServiceServer) AdminGetProfile(context.Context, *AdminGetProfileRequest) (*Profile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminGetProfile not implemented")
}
func (UnimplementedAdminServiceServer) AdminUpdateProfile(context.Context, *AdminUpdateProfileRequest) (*Profile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminUpdateProfile not implemented")
}
func (UnimplementedAdminServiceServer) AdminGetBiography(context.Context, *AdminGetBiographyRequest) (*Biography, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminGetBiography not implemented")
}
func (UnimplementedAdminServiceServer) AdminUpdateBiography(context.Context, *AdminUpdateBiographyRequest) (*Biography, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminUpdateBiography not implemented")
}
func (UnimplementedAdminServiceServer) AdminGetJobResume(context.Context, *AdminGetJobResumeRequest) (*JobResume, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminGetJobResume not implemented")
}
func (UnimplementedAdminServiceServer) AdminUpdateJobResume(context.Context, *AdminUpdateJobResumeRequest) (*JobResume, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminUpdateJobResume not implemented")
}
func (UnimplementedAdminServiceServer) mustEmbedUnimplementedAdminServiceServer() {}
func (UnimplementedAdminServiceServer) testEmbeddedByValue()                      {}

// UnsafeAdminServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AdminServiceServer will
// result in compilation errors.
type UnsafeAdminServiceServer interface {
	mustEmbedUnimplementedAdminServiceServer()
}

func RegisterAdminServiceServer(s grpc.ServiceRegistrar, srv AdminServiceServer) {
	// If the following call pancis, it indicates UnimplementedAdminServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&AdminService_ServiceDesc, srv)
}

func _AdminService_AdminGetCabinet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminGetCabinetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).AdminGetCabinet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AdminService_AdminGetCabinet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).AdminGetCabinet(ctx, req.(*AdminGetCabinetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_AdminGetProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminGetProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).AdminGetProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AdminService_AdminGetProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).AdminGetProfile(ctx, req.(*AdminGetProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_AdminUpdateProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminUpdateProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).AdminUpdateProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AdminService_AdminUpdateProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).AdminUpdateProfile(ctx, req.(*AdminUpdateProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_AdminGetBiography_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminGetBiographyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).AdminGetBiography(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AdminService_AdminGetBiography_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).AdminGetBiography(ctx, req.(*AdminGetBiographyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_AdminUpdateBiography_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminUpdateBiographyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).AdminUpdateBiography(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AdminService_AdminUpdateBiography_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).AdminUpdateBiography(ctx, req.(*AdminUpdateBiographyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_AdminGetJobResume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminGetJobResumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).AdminGetJobResume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AdminService_AdminGetJobResume_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).AdminGetJobResume(ctx, req.(*AdminGetJobResumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_AdminUpdateJobResume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminUpdateJobResumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).AdminUpdateJobResume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AdminService_AdminUpdateJobResume_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).AdminUpdateJobResume(ctx, req.(*AdminUpdateJobResumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AdminService_ServiceDesc is the grpc.ServiceDesc for AdminService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AdminService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "elector.AdminService",
	HandlerType: (*AdminServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AdminGetCabinet",
			Handler:    _AdminService_AdminGetCabinet_Handler,
		},
		{
			MethodName: "AdminGetProfile",
			Handler:    _AdminService_AdminGetProfile_Handler,
		},
		{
			MethodName: "AdminUpdateProfile",
			Handler:    _AdminService_AdminUpdateProfile_Handler,
		},
		{
			MethodName: "AdminGetBiography",
			Handler:    _AdminService_AdminGetBiography_Handler,
		},
		{
			MethodName: "AdminUpdateBiography",
			Handler:    _AdminService_AdminUpdateBiography_Handler,
		},
		{
			MethodName: "AdminGetJobResume",
			Handler:    _AdminService_AdminGetJobResume_Handler,
		},
		{
			MethodName: "AdminUpdateJobResume",
			Handler:    _AdminService_AdminUpdateJobResume_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "svc/electorcab/cab_admin.proto",
}
