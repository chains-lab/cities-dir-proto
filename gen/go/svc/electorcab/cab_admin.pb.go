// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: svc/electorcab/cab_admin.proto

package electorcab

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// REQUESTS
type GetCabinetByAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetCabinetByAdminRequest) Reset() {
	*x = GetCabinetByAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_electorcab_cab_admin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCabinetByAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCabinetByAdminRequest) ProtoMessage() {}

func (x *GetCabinetByAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_electorcab_cab_admin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCabinetByAdminRequest.ProtoReflect.Descriptor instead.
func (*GetCabinetByAdminRequest) Descriptor() ([]byte, []int) {
	return file_svc_electorcab_cab_admin_proto_rawDescGZIP(), []int{0}
}

func (x *GetCabinetByAdminRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetProfileByAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetProfileByAdminRequest) Reset() {
	*x = GetProfileByAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_electorcab_cab_admin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileByAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileByAdminRequest) ProtoMessage() {}

func (x *GetProfileByAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_electorcab_cab_admin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileByAdminRequest.ProtoReflect.Descriptor instead.
func (*GetProfileByAdminRequest) Descriptor() ([]byte, []int) {
	return file_svc_electorcab_cab_admin_proto_rawDescGZIP(), []int{1}
}

func (x *GetProfileByAdminRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UpdateProfileByAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username    *string `protobuf:"bytes,2,opt,name=username,proto3,oneof" json:"username,omitempty"`
	Pseudonym   *string `protobuf:"bytes,3,opt,name=pseudonym,proto3,oneof" json:"pseudonym,omitempty"`
	Description *string `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Avatar      *string `protobuf:"bytes,5,opt,name=avatar,proto3,oneof" json:"avatar,omitempty"`
	Official    *bool   `protobuf:"varint,6,opt,name=official,proto3,oneof" json:"official,omitempty"`
}

func (x *UpdateProfileByAdminRequest) Reset() {
	*x = UpdateProfileByAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_electorcab_cab_admin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProfileByAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfileByAdminRequest) ProtoMessage() {}

func (x *UpdateProfileByAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_electorcab_cab_admin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfileByAdminRequest.ProtoReflect.Descriptor instead.
func (*UpdateProfileByAdminRequest) Descriptor() ([]byte, []int) {
	return file_svc_electorcab_cab_admin_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateProfileByAdminRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateProfileByAdminRequest) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *UpdateProfileByAdminRequest) GetPseudonym() string {
	if x != nil && x.Pseudonym != nil {
		return *x.Pseudonym
	}
	return ""
}

func (x *UpdateProfileByAdminRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdateProfileByAdminRequest) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

func (x *UpdateProfileByAdminRequest) GetOfficial() bool {
	if x != nil && x.Official != nil {
		return *x.Official
	}
	return false
}

type GetBiographyByAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetBiographyByAdminRequest) Reset() {
	*x = GetBiographyByAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_electorcab_cab_admin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBiographyByAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBiographyByAdminRequest) ProtoMessage() {}

func (x *GetBiographyByAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_electorcab_cab_admin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBiographyByAdminRequest.ProtoReflect.Descriptor instead.
func (*GetBiographyByAdminRequest) Descriptor() ([]byte, []int) {
	return file_svc_electorcab_cab_admin_proto_rawDescGZIP(), []int{3}
}

func (x *GetBiographyByAdminRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UpdateBiographyByAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Birthday        *string `protobuf:"bytes,2,opt,name=birthday,proto3,oneof" json:"birthday,omitempty"` // Format: YYYY-MM-DD
	Sex             *string `protobuf:"bytes,3,opt,name=sex,proto3,oneof" json:"sex,omitempty"`
	City            *string `protobuf:"bytes,4,opt,name=city,proto3,oneof" json:"city,omitempty"`
	Region          *string `protobuf:"bytes,5,opt,name=region,proto3,oneof" json:"region,omitempty"`
	Country         *string `protobuf:"bytes,6,opt,name=country,proto3,oneof" json:"country,omitempty"`
	Nationality     *string `protobuf:"bytes,7,opt,name=nationality,proto3,oneof" json:"nationality,omitempty"`
	PrimaryLanguage *string `protobuf:"bytes,8,opt,name=primary_language,json=primaryLanguage,proto3,oneof" json:"primary_language,omitempty"`
}

func (x *UpdateBiographyByAdminRequest) Reset() {
	*x = UpdateBiographyByAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_electorcab_cab_admin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBiographyByAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBiographyByAdminRequest) ProtoMessage() {}

func (x *UpdateBiographyByAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_electorcab_cab_admin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBiographyByAdminRequest.ProtoReflect.Descriptor instead.
func (*UpdateBiographyByAdminRequest) Descriptor() ([]byte, []int) {
	return file_svc_electorcab_cab_admin_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateBiographyByAdminRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateBiographyByAdminRequest) GetBirthday() string {
	if x != nil && x.Birthday != nil {
		return *x.Birthday
	}
	return ""
}

func (x *UpdateBiographyByAdminRequest) GetSex() string {
	if x != nil && x.Sex != nil {
		return *x.Sex
	}
	return ""
}

func (x *UpdateBiographyByAdminRequest) GetCity() string {
	if x != nil && x.City != nil {
		return *x.City
	}
	return ""
}

func (x *UpdateBiographyByAdminRequest) GetRegion() string {
	if x != nil && x.Region != nil {
		return *x.Region
	}
	return ""
}

func (x *UpdateBiographyByAdminRequest) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

func (x *UpdateBiographyByAdminRequest) GetNationality() string {
	if x != nil && x.Nationality != nil {
		return *x.Nationality
	}
	return ""
}

func (x *UpdateBiographyByAdminRequest) GetPrimaryLanguage() string {
	if x != nil && x.PrimaryLanguage != nil {
		return *x.PrimaryLanguage
	}
	return ""
}

type GetJobResumeByAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetJobResumeByAdminRequest) Reset() {
	*x = GetJobResumeByAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_electorcab_cab_admin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobResumeByAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobResumeByAdminRequest) ProtoMessage() {}

func (x *GetJobResumeByAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_electorcab_cab_admin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobResumeByAdminRequest.ProtoReflect.Descriptor instead.
func (*GetJobResumeByAdminRequest) Descriptor() ([]byte, []int) {
	return file_svc_electorcab_cab_admin_proto_rawDescGZIP(), []int{5}
}

func (x *GetJobResumeByAdminRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UpdateJobResumeByAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Degree   *string `protobuf:"bytes,2,opt,name=degree,proto3,oneof" json:"degree,omitempty"`
	Industry *string `protobuf:"bytes,3,opt,name=industry,proto3,oneof" json:"industry,omitempty"`
	Income   *string `protobuf:"bytes,4,opt,name=income,proto3,oneof" json:"income,omitempty"`
}

func (x *UpdateJobResumeByAdminRequest) Reset() {
	*x = UpdateJobResumeByAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_electorcab_cab_admin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateJobResumeByAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJobResumeByAdminRequest) ProtoMessage() {}

func (x *UpdateJobResumeByAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_electorcab_cab_admin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJobResumeByAdminRequest.ProtoReflect.Descriptor instead.
func (*UpdateJobResumeByAdminRequest) Descriptor() ([]byte, []int) {
	return file_svc_electorcab_cab_admin_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateJobResumeByAdminRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateJobResumeByAdminRequest) GetDegree() string {
	if x != nil && x.Degree != nil {
		return *x.Degree
	}
	return ""
}

func (x *UpdateJobResumeByAdminRequest) GetIndustry() string {
	if x != nil && x.Industry != nil {
		return *x.Industry
	}
	return ""
}

func (x *UpdateJobResumeByAdminRequest) GetIncome() string {
	if x != nil && x.Income != nil {
		return *x.Income
	}
	return ""
}

var File_svc_electorcab_cab_admin_proto protoreflect.FileDescriptor

var file_svc_electorcab_cab_admin_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x73, 0x76, 0x63, 0x2f, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x61, 0x62,
	0x2f, 0x63, 0x61, 0x62, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x20, 0x73, 0x76, 0x63, 0x2f, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x61, 0x62, 0x2f, 0x63, 0x61, 0x62, 0x5f, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x33, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x33, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa2, 0x02, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x21, 0x0a, 0x09, 0x70, 0x73, 0x65, 0x75, 0x64, 0x6f, 0x6e, 0x79, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x70, 0x73, 0x65, 0x75, 0x64, 0x6f, 0x6e, 0x79, 0x6d, 0x88,
	0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x73, 0x65, 0x75, 0x64, 0x6f, 0x6e,
	0x79, 0x6d, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x22, 0x35, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x42, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xf6, 0x02, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x69, 0x6f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x79, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a,
	0x03, 0x73, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x03, 0x73, 0x65,
	0x78, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05,
	0x52, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x2e, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0f, 0x70, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x73, 0x65, 0x78, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x35, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xb6, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52,
	0x65, 0x73, 0x75, 0x6d, 0x65, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x06,
	0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06,
	0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x69, 0x6e, 0x64,
	0x75, 0x73, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x69,
	0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x69, 0x6e,
	0x63, 0x6f, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x69, 0x6e,
	0x63, 0x6f, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64, 0x65, 0x67, 0x72,
	0x65, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x32, 0xbe, 0x04, 0x0a, 0x0c, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x12, 0x21, 0x2e, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x65, 0x74, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x65, 0x74, 0x12, 0x48, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x21, 0x2e, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42,
	0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x4e, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x24, 0x2e, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42,
	0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x4e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x42,
	0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x23, 0x2e, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x42, 0x79, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x42, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x12,
	0x54, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x79, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x26, 0x2e, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x69, 0x6f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x79, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x12, 0x2e, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x42, 0x69, 0x6f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x79, 0x12, 0x4e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52,
	0x65, 0x73, 0x75, 0x6d, 0x65, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x23, 0x2e, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73,
	0x75, 0x6d, 0x65, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x12, 0x2e, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4a, 0x6f, 0x62, 0x52,
	0x65, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x54, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12,
	0x26, 0x2e, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x42, 0x46, 0x5a, 0x44, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73,
	0x2d, 0x6c, 0x61, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x76, 0x63, 0x2f, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x61, 0x62, 0x3b, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x63, 0x61, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_svc_electorcab_cab_admin_proto_rawDescOnce sync.Once
	file_svc_electorcab_cab_admin_proto_rawDescData = file_svc_electorcab_cab_admin_proto_rawDesc
)

func file_svc_electorcab_cab_admin_proto_rawDescGZIP() []byte {
	file_svc_electorcab_cab_admin_proto_rawDescOnce.Do(func() {
		file_svc_electorcab_cab_admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_svc_electorcab_cab_admin_proto_rawDescData)
	})
	return file_svc_electorcab_cab_admin_proto_rawDescData
}

var file_svc_electorcab_cab_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_svc_electorcab_cab_admin_proto_goTypes = []any{
	(*GetCabinetByAdminRequest)(nil),      // 0: elector.GetCabinetByAdminRequest
	(*GetProfileByAdminRequest)(nil),      // 1: elector.GetProfileByAdminRequest
	(*UpdateProfileByAdminRequest)(nil),   // 2: elector.UpdateProfileByAdminRequest
	(*GetBiographyByAdminRequest)(nil),    // 3: elector.GetBiographyByAdminRequest
	(*UpdateBiographyByAdminRequest)(nil), // 4: elector.UpdateBiographyByAdminRequest
	(*GetJobResumeByAdminRequest)(nil),    // 5: elector.GetJobResumeByAdminRequest
	(*UpdateJobResumeByAdminRequest)(nil), // 6: elector.UpdateJobResumeByAdminRequest
	(*Cabinet)(nil),                       // 7: elector.Cabinet
	(*Profile)(nil),                       // 8: elector.Profile
	(*Biography)(nil),                     // 9: elector.Biography
	(*JobResume)(nil),                     // 10: elector.JobResume
}
var file_svc_electorcab_cab_admin_proto_depIdxs = []int32{
	0,  // 0: elector.AdminService.GetCabinetByAdmin:input_type -> elector.GetCabinetByAdminRequest
	1,  // 1: elector.AdminService.GetProfileByAdmin:input_type -> elector.GetProfileByAdminRequest
	2,  // 2: elector.AdminService.UpdateProfileByAdmin:input_type -> elector.UpdateProfileByAdminRequest
	3,  // 3: elector.AdminService.GetBiographyByAdmin:input_type -> elector.GetBiographyByAdminRequest
	4,  // 4: elector.AdminService.UpdateBiographyByAdmin:input_type -> elector.UpdateBiographyByAdminRequest
	5,  // 5: elector.AdminService.GetJobResumeByAdmin:input_type -> elector.GetJobResumeByAdminRequest
	6,  // 6: elector.AdminService.UpdateJobResumeByAdmin:input_type -> elector.UpdateJobResumeByAdminRequest
	7,  // 7: elector.AdminService.GetCabinetByAdmin:output_type -> elector.Cabinet
	8,  // 8: elector.AdminService.GetProfileByAdmin:output_type -> elector.Profile
	8,  // 9: elector.AdminService.UpdateProfileByAdmin:output_type -> elector.Profile
	9,  // 10: elector.AdminService.GetBiographyByAdmin:output_type -> elector.Biography
	9,  // 11: elector.AdminService.UpdateBiographyByAdmin:output_type -> elector.Biography
	10, // 12: elector.AdminService.GetJobResumeByAdmin:output_type -> elector.JobResume
	10, // 13: elector.AdminService.UpdateJobResumeByAdmin:output_type -> elector.JobResume
	7,  // [7:14] is the sub-list for method output_type
	0,  // [0:7] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_svc_electorcab_cab_admin_proto_init() }
func file_svc_electorcab_cab_admin_proto_init() {
	if File_svc_electorcab_cab_admin_proto != nil {
		return
	}
	file_svc_electorcab_cab_structs_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_svc_electorcab_cab_admin_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetCabinetByAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_electorcab_cab_admin_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetProfileByAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_electorcab_cab_admin_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateProfileByAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_electorcab_cab_admin_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetBiographyByAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_electorcab_cab_admin_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateBiographyByAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_electorcab_cab_admin_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetJobResumeByAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_electorcab_cab_admin_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateJobResumeByAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_svc_electorcab_cab_admin_proto_msgTypes[2].OneofWrappers = []any{}
	file_svc_electorcab_cab_admin_proto_msgTypes[4].OneofWrappers = []any{}
	file_svc_electorcab_cab_admin_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_svc_electorcab_cab_admin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svc_electorcab_cab_admin_proto_goTypes,
		DependencyIndexes: file_svc_electorcab_cab_admin_proto_depIdxs,
		MessageInfos:      file_svc_electorcab_cab_admin_proto_msgTypes,
	}.Build()
	File_svc_electorcab_cab_admin_proto = out.File
	file_svc_electorcab_cab_admin_proto_rawDesc = nil
	file_svc_electorcab_cab_admin_proto_goTypes = nil
	file_svc_electorcab_cab_admin_proto_depIdxs = nil
}
