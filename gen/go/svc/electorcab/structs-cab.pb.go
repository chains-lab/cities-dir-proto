// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: svc/electorcab/structs-cab.proto

package electorcab

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username    string  `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Pseudonym   *string `protobuf:"bytes,3,opt,name=pseudonym,proto3,oneof" json:"pseudonym,omitempty"`
	Description *string `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Avatar      *string `protobuf:"bytes,5,opt,name=avatar,proto3,oneof" json:"avatar,omitempty"`
	Official    bool    `protobuf:"varint,6,opt,name=official,proto3" json:"official,omitempty"`
	UpdatedAt   string  `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedAt   string  `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Profile) Reset() {
	*x = Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_electorcab_structs_cab_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_svc_electorcab_structs_cab_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_svc_electorcab_structs_cab_proto_rawDescGZIP(), []int{0}
}

func (x *Profile) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Profile) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Profile) GetPseudonym() string {
	if x != nil && x.Pseudonym != nil {
		return *x.Pseudonym
	}
	return ""
}

func (x *Profile) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Profile) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

func (x *Profile) GetOfficial() bool {
	if x != nil {
		return x.Official
	}
	return false
}

func (x *Profile) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Profile) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type Biography struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                   string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Sex                      *string `protobuf:"bytes,2,opt,name=sex,proto3,oneof" json:"sex,omitempty"`
	Birthday                 *string `protobuf:"bytes,3,opt,name=birthday,proto3,oneof" json:"birthday,omitempty"`
	Nationality              *string `protobuf:"bytes,4,opt,name=nationality,proto3,oneof" json:"nationality,omitempty"`
	PrimaryLanguage          *string `protobuf:"bytes,5,opt,name=primary_language,json=primaryLanguage,proto3,oneof" json:"primary_language,omitempty"`
	Country                  *string `protobuf:"bytes,6,opt,name=country,proto3,oneof" json:"country,omitempty"`
	City                     *string `protobuf:"bytes,7,opt,name=city,proto3,oneof" json:"city,omitempty"`
	SexUpdatedAt             *string `protobuf:"bytes,8,opt,name=sex_updated_at,json=sexUpdatedAt,proto3,oneof" json:"sex_updated_at,omitempty"`
	NationalityUpdatedAt     *string `protobuf:"bytes,9,opt,name=nationality_updated_at,json=nationalityUpdatedAt,proto3,oneof" json:"nationality_updated_at,omitempty"`
	PrimaryLanguageUpdatedAt *string `protobuf:"bytes,10,opt,name=primary_language_updated_at,json=primaryLanguageUpdatedAt,proto3,oneof" json:"primary_language_updated_at,omitempty"`
	CountryUpdatedAt         *string `protobuf:"bytes,11,opt,name=country_updated_at,json=countryUpdatedAt,proto3,oneof" json:"country_updated_at,omitempty"`
	ResidenceUpdatedAt       *string `protobuf:"bytes,12,opt,name=residence_updated_at,json=residenceUpdatedAt,proto3,oneof" json:"residence_updated_at,omitempty"`
}

func (x *Biography) Reset() {
	*x = Biography{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_electorcab_structs_cab_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Biography) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Biography) ProtoMessage() {}

func (x *Biography) ProtoReflect() protoreflect.Message {
	mi := &file_svc_electorcab_structs_cab_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Biography.ProtoReflect.Descriptor instead.
func (*Biography) Descriptor() ([]byte, []int) {
	return file_svc_electorcab_structs_cab_proto_rawDescGZIP(), []int{1}
}

func (x *Biography) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Biography) GetSex() string {
	if x != nil && x.Sex != nil {
		return *x.Sex
	}
	return ""
}

func (x *Biography) GetBirthday() string {
	if x != nil && x.Birthday != nil {
		return *x.Birthday
	}
	return ""
}

func (x *Biography) GetNationality() string {
	if x != nil && x.Nationality != nil {
		return *x.Nationality
	}
	return ""
}

func (x *Biography) GetPrimaryLanguage() string {
	if x != nil && x.PrimaryLanguage != nil {
		return *x.PrimaryLanguage
	}
	return ""
}

func (x *Biography) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

func (x *Biography) GetCity() string {
	if x != nil && x.City != nil {
		return *x.City
	}
	return ""
}

func (x *Biography) GetSexUpdatedAt() string {
	if x != nil && x.SexUpdatedAt != nil {
		return *x.SexUpdatedAt
	}
	return ""
}

func (x *Biography) GetNationalityUpdatedAt() string {
	if x != nil && x.NationalityUpdatedAt != nil {
		return *x.NationalityUpdatedAt
	}
	return ""
}

func (x *Biography) GetPrimaryLanguageUpdatedAt() string {
	if x != nil && x.PrimaryLanguageUpdatedAt != nil {
		return *x.PrimaryLanguageUpdatedAt
	}
	return ""
}

func (x *Biography) GetCountryUpdatedAt() string {
	if x != nil && x.CountryUpdatedAt != nil {
		return *x.CountryUpdatedAt
	}
	return ""
}

func (x *Biography) GetResidenceUpdatedAt() string {
	if x != nil && x.ResidenceUpdatedAt != nil {
		return *x.ResidenceUpdatedAt
	}
	return ""
}

type JobResume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Degree            *string `protobuf:"bytes,2,opt,name=degree,proto3,oneof" json:"degree,omitempty"`
	Industry          *string `protobuf:"bytes,3,opt,name=industry,proto3,oneof" json:"industry,omitempty"`
	Income            *string `protobuf:"bytes,4,opt,name=income,proto3,oneof" json:"income,omitempty"`
	DegreeUpdatedAt   *string `protobuf:"bytes,5,opt,name=degree_updated_at,json=degreeUpdatedAt,proto3,oneof" json:"degree_updated_at,omitempty"`
	IndustryUpdatedAt *string `protobuf:"bytes,6,opt,name=industry_updated_at,json=industryUpdatedAt,proto3,oneof" json:"industry_updated_at,omitempty"`
	IncomeUpdatedAt   *string `protobuf:"bytes,7,opt,name=income_updated_at,json=incomeUpdatedAt,proto3,oneof" json:"income_updated_at,omitempty"`
}

func (x *JobResume) Reset() {
	*x = JobResume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_electorcab_structs_cab_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobResume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobResume) ProtoMessage() {}

func (x *JobResume) ProtoReflect() protoreflect.Message {
	mi := &file_svc_electorcab_structs_cab_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobResume.ProtoReflect.Descriptor instead.
func (*JobResume) Descriptor() ([]byte, []int) {
	return file_svc_electorcab_structs_cab_proto_rawDescGZIP(), []int{2}
}

func (x *JobResume) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *JobResume) GetDegree() string {
	if x != nil && x.Degree != nil {
		return *x.Degree
	}
	return ""
}

func (x *JobResume) GetIndustry() string {
	if x != nil && x.Industry != nil {
		return *x.Industry
	}
	return ""
}

func (x *JobResume) GetIncome() string {
	if x != nil && x.Income != nil {
		return *x.Income
	}
	return ""
}

func (x *JobResume) GetDegreeUpdatedAt() string {
	if x != nil && x.DegreeUpdatedAt != nil {
		return *x.DegreeUpdatedAt
	}
	return ""
}

func (x *JobResume) GetIndustryUpdatedAt() string {
	if x != nil && x.IndustryUpdatedAt != nil {
		return *x.IndustryUpdatedAt
	}
	return ""
}

func (x *JobResume) GetIncomeUpdatedAt() string {
	if x != nil && x.IncomeUpdatedAt != nil {
		return *x.IncomeUpdatedAt
	}
	return ""
}

type Cabinet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile   *Profile   `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
	Biography *Biography `protobuf:"bytes,2,opt,name=biography,proto3" json:"biography,omitempty"`
	JobResume *JobResume `protobuf:"bytes,3,opt,name=job_resume,json=jobResume,proto3" json:"job_resume,omitempty"`
}

func (x *Cabinet) Reset() {
	*x = Cabinet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_electorcab_structs_cab_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cabinet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cabinet) ProtoMessage() {}

func (x *Cabinet) ProtoReflect() protoreflect.Message {
	mi := &file_svc_electorcab_structs_cab_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cabinet.ProtoReflect.Descriptor instead.
func (*Cabinet) Descriptor() ([]byte, []int) {
	return file_svc_electorcab_structs_cab_proto_rawDescGZIP(), []int{3}
}

func (x *Cabinet) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *Cabinet) GetBiography() *Biography {
	if x != nil {
		return x.Biography
	}
	return nil
}

func (x *Cabinet) GetJobResume() *JobResume {
	if x != nil {
		return x.JobResume
	}
	return nil
}

var File_svc_electorcab_structs_cab_proto protoreflect.FileDescriptor

var file_svc_electorcab_structs_cab_proto_rawDesc = []byte{
	0x0a, 0x20, 0x73, 0x76, 0x63, 0x2f, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x61, 0x62,
	0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2d, 0x63, 0x61, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x07, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0xa8, 0x02, 0x0a, 0x07,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x09,
	0x70, 0x73, 0x65, 0x75, 0x64, 0x6f, 0x6e, 0x79, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x09, 0x70, 0x73, 0x65, 0x75, 0x64, 0x6f, 0x6e, 0x79, 0x6d, 0x88, 0x01, 0x01, 0x12,
	0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x70, 0x73, 0x65, 0x75, 0x64, 0x6f, 0x6e, 0x79, 0x6d, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0xcc, 0x05, 0x0a, 0x09, 0x42, 0x69, 0x6f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a,
	0x03, 0x73, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x73, 0x65,
	0x78, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64,
	0x61, 0x79, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10,
	0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x73, 0x65, 0x78, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0c,
	0x73, 0x65, 0x78, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x39, 0x0a, 0x16, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x07, 0x52, 0x14, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x1b, 0x70, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x08, 0x52, 0x18, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x31,
	0x0a, 0x12, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x10, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x35, 0x0a, 0x14, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0a, 0x52, 0x12, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x65, 0x78,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x13, 0x0a,
	0x11, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x78, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x1e, 0x0a, 0x1c, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x17, 0x0a, 0x15,
	0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0xfd, 0x02, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73,
	0x75, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x06,
	0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06,
	0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x69, 0x6e, 0x64,
	0x75, 0x73, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x69,
	0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x69, 0x6e,
	0x63, 0x6f, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x69, 0x6e,
	0x63, 0x6f, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x64, 0x65, 0x67, 0x72, 0x65,
	0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x0f, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x69, 0x6e, 0x64, 0x75,
	0x73, 0x74, 0x72, 0x79, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x11, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72,
	0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a,
	0x11, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6f,
	0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x6e,
	0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x69, 0x6e, 0x63, 0x6f, 0x6d,
	0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x69, 0x6e, 0x64, 0x75,
	0x73, 0x74, 0x72, 0x79, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42,
	0x14, 0x0a, 0x12, 0x5f, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x07, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x65,
	0x74, 0x12, 0x2a, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x30, 0x0a,
	0x09, 0x62, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x42, 0x69, 0x6f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x79, 0x52, 0x09, 0x62, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x12,
	0x31, 0x0a, 0x0a, 0x6a, 0x6f, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x09, 0x6a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x75,
	0x6d, 0x65, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x2d, 0x6c, 0x61, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f,
	0x2f, 0x73, 0x76, 0x63, 0x2f, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x61, 0x62, 0x3b,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x61, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_svc_electorcab_structs_cab_proto_rawDescOnce sync.Once
	file_svc_electorcab_structs_cab_proto_rawDescData = file_svc_electorcab_structs_cab_proto_rawDesc
)

func file_svc_electorcab_structs_cab_proto_rawDescGZIP() []byte {
	file_svc_electorcab_structs_cab_proto_rawDescOnce.Do(func() {
		file_svc_electorcab_structs_cab_proto_rawDescData = protoimpl.X.CompressGZIP(file_svc_electorcab_structs_cab_proto_rawDescData)
	})
	return file_svc_electorcab_structs_cab_proto_rawDescData
}

var file_svc_electorcab_structs_cab_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_svc_electorcab_structs_cab_proto_goTypes = []any{
	(*Profile)(nil),   // 0: elector.Profile
	(*Biography)(nil), // 1: elector.Biography
	(*JobResume)(nil), // 2: elector.JobResume
	(*Cabinet)(nil),   // 3: elector.Cabinet
}
var file_svc_electorcab_structs_cab_proto_depIdxs = []int32{
	0, // 0: elector.Cabinet.profile:type_name -> elector.Profile
	1, // 1: elector.Cabinet.biography:type_name -> elector.Biography
	2, // 2: elector.Cabinet.job_resume:type_name -> elector.JobResume
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_svc_electorcab_structs_cab_proto_init() }
func file_svc_electorcab_structs_cab_proto_init() {
	if File_svc_electorcab_structs_cab_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_svc_electorcab_structs_cab_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_electorcab_structs_cab_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Biography); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_electorcab_structs_cab_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*JobResume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_electorcab_structs_cab_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Cabinet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_svc_electorcab_structs_cab_proto_msgTypes[0].OneofWrappers = []any{}
	file_svc_electorcab_structs_cab_proto_msgTypes[1].OneofWrappers = []any{}
	file_svc_electorcab_structs_cab_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_svc_electorcab_structs_cab_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_svc_electorcab_structs_cab_proto_goTypes,
		DependencyIndexes: file_svc_electorcab_structs_cab_proto_depIdxs,
		MessageInfos:      file_svc_electorcab_structs_cab_proto_msgTypes,
	}.Build()
	File_svc_electorcab_structs_cab_proto = out.File
	file_svc_electorcab_structs_cab_proto_rawDesc = nil
	file_svc_electorcab_structs_cab_proto_goTypes = nil
	file_svc_electorcab_structs_cab_proto_depIdxs = nil
}
