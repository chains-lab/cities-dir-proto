// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: svc/countryadmin/countryadmin.proto

package countryadmin

import (
	userdata "github.com/chains-lab/cities-dir-proto/gen/go/common/userdata"
	country "github.com/chains-lab/cities-dir-proto/gen/go/svc/country"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCountryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Initiator     *userdata.UserData     `protobuf:"bytes,1,opt,name=initiator,proto3" json:"initiator,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCountryRequest) Reset() {
	*x = CreateCountryRequest{}
	mi := &file_svc_countryadmin_countryadmin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCountryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCountryRequest) ProtoMessage() {}

func (x *CreateCountryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_countryadmin_countryadmin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCountryRequest.ProtoReflect.Descriptor instead.
func (*CreateCountryRequest) Descriptor() ([]byte, []int) {
	return file_svc_countryadmin_countryadmin_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCountryRequest) GetInitiator() *userdata.UserData {
	if x != nil {
		return x.Initiator
	}
	return nil
}

func (x *CreateCountryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCountryRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateCountryStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Initiator     *userdata.UserData     `protobuf:"bytes,1,opt,name=initiator,proto3" json:"initiator,omitempty"`
	CountryId     string                 `protobuf:"bytes,2,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCountryStatusRequest) Reset() {
	*x = UpdateCountryStatusRequest{}
	mi := &file_svc_countryadmin_countryadmin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCountryStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCountryStatusRequest) ProtoMessage() {}

func (x *UpdateCountryStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_countryadmin_countryadmin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCountryStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateCountryStatusRequest) Descriptor() ([]byte, []int) {
	return file_svc_countryadmin_countryadmin_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateCountryStatusRequest) GetInitiator() *userdata.UserData {
	if x != nil {
		return x.Initiator
	}
	return nil
}

func (x *UpdateCountryStatusRequest) GetCountryId() string {
	if x != nil {
		return x.CountryId
	}
	return ""
}

func (x *UpdateCountryStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateCountryNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Initiator     *userdata.UserData     `protobuf:"bytes,1,opt,name=initiator,proto3" json:"initiator,omitempty"`
	CountryId     string                 `protobuf:"bytes,2,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCountryNameRequest) Reset() {
	*x = UpdateCountryNameRequest{}
	mi := &file_svc_countryadmin_countryadmin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCountryNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCountryNameRequest) ProtoMessage() {}

func (x *UpdateCountryNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_countryadmin_countryadmin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCountryNameRequest.ProtoReflect.Descriptor instead.
func (*UpdateCountryNameRequest) Descriptor() ([]byte, []int) {
	return file_svc_countryadmin_countryadmin_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateCountryNameRequest) GetInitiator() *userdata.UserData {
	if x != nil {
		return x.Initiator
	}
	return nil
}

func (x *UpdateCountryNameRequest) GetCountryId() string {
	if x != nil {
		return x.CountryId
	}
	return ""
}

func (x *UpdateCountryNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_svc_countryadmin_countryadmin_proto protoreflect.FileDescriptor

const file_svc_countryadmin_countryadmin_proto_rawDesc = "" +
	"\n" +
	"#svc/countryadmin/countryadmin.proto\x12\fcountryadmin\x1a\x19svc/country/country.proto\x1a\x1ecommon/userdata/userdata.proto\"t\n" +
	"\x14CreateCountryRequest\x120\n" +
	"\tinitiator\x18\x01 \x01(\v2\x12.userdata.UserDataR\tinitiator\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\"\x85\x01\n" +
	"\x1aUpdateCountryStatusRequest\x120\n" +
	"\tinitiator\x18\x01 \x01(\v2\x12.userdata.UserDataR\tinitiator\x12\x1d\n" +
	"\n" +
	"country_id\x18\x02 \x01(\tR\tcountryId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\"\x7f\n" +
	"\x18UpdateCountryNameRequest\x120\n" +
	"\tinitiator\x18\x01 \x01(\v2\x12.userdata.UserDataR\tinitiator\x12\x1d\n" +
	"\n" +
	"country_id\x18\x02 \x01(\tR\tcountryId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name2\xfe\x01\n" +
	"\x13CountryAdminService\x12E\n" +
	"\rCreateCountry\x12\".countryadmin.CreateCountryRequest\x1a\x10.country.Country\x12Q\n" +
	"\x13UpdateCountryStatus\x12(.countryadmin.UpdateCountryStatusRequest\x1a\x10.country.Country\x12M\n" +
	"\x11UpdateCountryName\x12&.countryadmin.UpdateCountryNameRequest\x1a\x10.country.CountryBMZKgithub.com/chains-lab/cities-dir-proto/gen/go/svc/countryadmin;countryadminb\x06proto3"

var (
	file_svc_countryadmin_countryadmin_proto_rawDescOnce sync.Once
	file_svc_countryadmin_countryadmin_proto_rawDescData []byte
)

func file_svc_countryadmin_countryadmin_proto_rawDescGZIP() []byte {
	file_svc_countryadmin_countryadmin_proto_rawDescOnce.Do(func() {
		file_svc_countryadmin_countryadmin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_svc_countryadmin_countryadmin_proto_rawDesc), len(file_svc_countryadmin_countryadmin_proto_rawDesc)))
	})
	return file_svc_countryadmin_countryadmin_proto_rawDescData
}

var file_svc_countryadmin_countryadmin_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_svc_countryadmin_countryadmin_proto_goTypes = []any{
	(*CreateCountryRequest)(nil),       // 0: countryadmin.CreateCountryRequest
	(*UpdateCountryStatusRequest)(nil), // 1: countryadmin.UpdateCountryStatusRequest
	(*UpdateCountryNameRequest)(nil),   // 2: countryadmin.UpdateCountryNameRequest
	(*userdata.UserData)(nil),          // 3: userdata.UserData
	(*country.Country)(nil),            // 4: country.Country
}
var file_svc_countryadmin_countryadmin_proto_depIdxs = []int32{
	3, // 0: countryadmin.CreateCountryRequest.initiator:type_name -> userdata.UserData
	3, // 1: countryadmin.UpdateCountryStatusRequest.initiator:type_name -> userdata.UserData
	3, // 2: countryadmin.UpdateCountryNameRequest.initiator:type_name -> userdata.UserData
	0, // 3: countryadmin.CountryAdminService.CreateCountry:input_type -> countryadmin.CreateCountryRequest
	1, // 4: countryadmin.CountryAdminService.UpdateCountryStatus:input_type -> countryadmin.UpdateCountryStatusRequest
	2, // 5: countryadmin.CountryAdminService.UpdateCountryName:input_type -> countryadmin.UpdateCountryNameRequest
	4, // 6: countryadmin.CountryAdminService.CreateCountry:output_type -> country.Country
	4, // 7: countryadmin.CountryAdminService.UpdateCountryStatus:output_type -> country.Country
	4, // 8: countryadmin.CountryAdminService.UpdateCountryName:output_type -> country.Country
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_svc_countryadmin_countryadmin_proto_init() }
func file_svc_countryadmin_countryadmin_proto_init() {
	if File_svc_countryadmin_countryadmin_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_svc_countryadmin_countryadmin_proto_rawDesc), len(file_svc_countryadmin_countryadmin_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svc_countryadmin_countryadmin_proto_goTypes,
		DependencyIndexes: file_svc_countryadmin_countryadmin_proto_depIdxs,
		MessageInfos:      file_svc_countryadmin_countryadmin_proto_msgTypes,
	}.Build()
	File_svc_countryadmin_countryadmin_proto = out.File
	file_svc_countryadmin_countryadmin_proto_goTypes = nil
	file_svc_countryadmin_countryadmin_proto_depIdxs = nil
}
