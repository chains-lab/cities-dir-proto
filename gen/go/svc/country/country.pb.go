// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: svc/country/country.proto

package country

import (
	pagination "github.com/chains-lab/cities-dir-proto/gen/go/common/pagination"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCountryByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CountryId     string                 `protobuf:"bytes,1,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCountryByIdRequest) Reset() {
	*x = GetCountryByIdRequest{}
	mi := &file_svc_country_country_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCountryByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountryByIdRequest) ProtoMessage() {}

func (x *GetCountryByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_country_country_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountryByIdRequest.ProtoReflect.Descriptor instead.
func (*GetCountryByIdRequest) Descriptor() ([]byte, []int) {
	return file_svc_country_country_proto_rawDescGZIP(), []int{0}
}

func (x *GetCountryByIdRequest) GetCountryId() string {
	if x != nil {
		return x.CountryId
	}
	return ""
}

type SearchCountriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NameLike      string                 `protobuf:"bytes,1,opt,name=name_like,json=nameLike,proto3" json:"name_like,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Pagination    *pagination.Request    `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchCountriesRequest) Reset() {
	*x = SearchCountriesRequest{}
	mi := &file_svc_country_country_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchCountriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCountriesRequest) ProtoMessage() {}

func (x *SearchCountriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_country_country_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCountriesRequest.ProtoReflect.Descriptor instead.
func (*SearchCountriesRequest) Descriptor() ([]byte, []int) {
	return file_svc_country_country_proto_rawDescGZIP(), []int{1}
}

func (x *SearchCountriesRequest) GetNameLike() string {
	if x != nil {
		return x.NameLike
	}
	return ""
}

func (x *SearchCountriesRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SearchCountriesRequest) GetPagination() *pagination.Request {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type AdminCreateCountryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminCreateCountryRequest) Reset() {
	*x = AdminCreateCountryRequest{}
	mi := &file_svc_country_country_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminCreateCountryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateCountryRequest) ProtoMessage() {}

func (x *AdminCreateCountryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_country_country_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateCountryRequest.ProtoReflect.Descriptor instead.
func (*AdminCreateCountryRequest) Descriptor() ([]byte, []int) {
	return file_svc_country_country_proto_rawDescGZIP(), []int{2}
}

func (x *AdminCreateCountryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdminCreateCountryRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type AdminUpdateCountryStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CountryId     string                 `protobuf:"bytes,1,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminUpdateCountryStatusRequest) Reset() {
	*x = AdminUpdateCountryStatusRequest{}
	mi := &file_svc_country_country_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminUpdateCountryStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateCountryStatusRequest) ProtoMessage() {}

func (x *AdminUpdateCountryStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_country_country_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateCountryStatusRequest.ProtoReflect.Descriptor instead.
func (*AdminUpdateCountryStatusRequest) Descriptor() ([]byte, []int) {
	return file_svc_country_country_proto_rawDescGZIP(), []int{3}
}

func (x *AdminUpdateCountryStatusRequest) GetCountryId() string {
	if x != nil {
		return x.CountryId
	}
	return ""
}

func (x *AdminUpdateCountryStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type AdminUpdateCountryNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CountryId     string                 `protobuf:"bytes,1,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminUpdateCountryNameRequest) Reset() {
	*x = AdminUpdateCountryNameRequest{}
	mi := &file_svc_country_country_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminUpdateCountryNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateCountryNameRequest) ProtoMessage() {}

func (x *AdminUpdateCountryNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_country_country_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateCountryNameRequest.ProtoReflect.Descriptor instead.
func (*AdminUpdateCountryNameRequest) Descriptor() ([]byte, []int) {
	return file_svc_country_country_proto_rawDescGZIP(), []int{4}
}

func (x *AdminUpdateCountryNameRequest) GetCountryId() string {
	if x != nil {
		return x.CountryId
	}
	return ""
}

func (x *AdminUpdateCountryNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Country struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Country) Reset() {
	*x = Country{}
	mi := &file_svc_country_country_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Country) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Country) ProtoMessage() {}

func (x *Country) ProtoReflect() protoreflect.Message {
	mi := &file_svc_country_country_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Country.ProtoReflect.Descriptor instead.
func (*Country) Descriptor() ([]byte, []int) {
	return file_svc_country_country_proto_rawDescGZIP(), []int{5}
}

func (x *Country) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Country) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Country) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type CountriesList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Countries     []*Country             `protobuf:"bytes,1,rep,name=countries,proto3" json:"countries,omitempty"`
	Pagination    *pagination.Response   `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountriesList) Reset() {
	*x = CountriesList{}
	mi := &file_svc_country_country_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountriesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountriesList) ProtoMessage() {}

func (x *CountriesList) ProtoReflect() protoreflect.Message {
	mi := &file_svc_country_country_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountriesList.ProtoReflect.Descriptor instead.
func (*CountriesList) Descriptor() ([]byte, []int) {
	return file_svc_country_country_proto_rawDescGZIP(), []int{6}
}

func (x *CountriesList) GetCountries() []*Country {
	if x != nil {
		return x.Countries
	}
	return nil
}

func (x *CountriesList) GetPagination() *pagination.Response {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_svc_country_country_proto protoreflect.FileDescriptor

const file_svc_country_country_proto_rawDesc = "" +
	"\n" +
	"\x19svc/country/country.proto\x12\acountry\x1a\"common/pagination/pagination.proto\"6\n" +
	"\x15GetCountryByIdRequest\x12\x1d\n" +
	"\n" +
	"country_id\x18\x01 \x01(\tR\tcountryId\"\x82\x01\n" +
	"\x16SearchCountriesRequest\x12\x1b\n" +
	"\tname_like\x18\x01 \x01(\tR\bnameLike\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x123\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2\x13.pagination.RequestR\n" +
	"pagination\"G\n" +
	"\x19AdminCreateCountryRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\"X\n" +
	"\x1fAdminUpdateCountryStatusRequest\x12\x1d\n" +
	"\n" +
	"country_id\x18\x01 \x01(\tR\tcountryId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\"R\n" +
	"\x1dAdminUpdateCountryNameRequest\x12\x1d\n" +
	"\n" +
	"country_id\x18\x01 \x01(\tR\tcountryId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"E\n" +
	"\aCountry\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\"u\n" +
	"\rCountriesList\x12.\n" +
	"\tcountries\x18\x01 \x03(\v2\x10.country.CountryR\tcountries\x124\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x14.pagination.ResponseR\n" +
	"pagination2\x98\x03\n" +
	"\x0eCountryService\x12B\n" +
	"\x0eGetCountryById\x12\x1e.country.GetCountryByIdRequest\x1a\x10.country.Country\x12J\n" +
	"\x0fSearchCountries\x12\x1f.country.SearchCountriesRequest\x1a\x16.country.CountriesList\x12J\n" +
	"\x12AdminCreateCountry\x12\".country.AdminCreateCountryRequest\x1a\x10.country.Country\x12V\n" +
	"\x18AdminUpdateCountryStatus\x12(.country.AdminUpdateCountryStatusRequest\x1a\x10.country.Country\x12R\n" +
	"\x16AdminUpdateCountryName\x12&.country.AdminUpdateCountryNameRequest\x1a\x10.country.CountryBCZAgithub.com/chains-lab/cities-dir-proto/gen/go/svc/country;countryb\x06proto3"

var (
	file_svc_country_country_proto_rawDescOnce sync.Once
	file_svc_country_country_proto_rawDescData []byte
)

func file_svc_country_country_proto_rawDescGZIP() []byte {
	file_svc_country_country_proto_rawDescOnce.Do(func() {
		file_svc_country_country_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_svc_country_country_proto_rawDesc), len(file_svc_country_country_proto_rawDesc)))
	})
	return file_svc_country_country_proto_rawDescData
}

var file_svc_country_country_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_svc_country_country_proto_goTypes = []any{
	(*GetCountryByIdRequest)(nil),           // 0: country.GetCountryByIdRequest
	(*SearchCountriesRequest)(nil),          // 1: country.SearchCountriesRequest
	(*AdminCreateCountryRequest)(nil),       // 2: country.AdminCreateCountryRequest
	(*AdminUpdateCountryStatusRequest)(nil), // 3: country.AdminUpdateCountryStatusRequest
	(*AdminUpdateCountryNameRequest)(nil),   // 4: country.AdminUpdateCountryNameRequest
	(*Country)(nil),                         // 5: country.Country
	(*CountriesList)(nil),                   // 6: country.CountriesList
	(*pagination.Request)(nil),              // 7: pagination.Request
	(*pagination.Response)(nil),             // 8: pagination.Response
}
var file_svc_country_country_proto_depIdxs = []int32{
	7, // 0: country.SearchCountriesRequest.pagination:type_name -> pagination.Request
	5, // 1: country.CountriesList.countries:type_name -> country.Country
	8, // 2: country.CountriesList.pagination:type_name -> pagination.Response
	0, // 3: country.CountryService.GetCountryById:input_type -> country.GetCountryByIdRequest
	1, // 4: country.CountryService.SearchCountries:input_type -> country.SearchCountriesRequest
	2, // 5: country.CountryService.AdminCreateCountry:input_type -> country.AdminCreateCountryRequest
	3, // 6: country.CountryService.AdminUpdateCountryStatus:input_type -> country.AdminUpdateCountryStatusRequest
	4, // 7: country.CountryService.AdminUpdateCountryName:input_type -> country.AdminUpdateCountryNameRequest
	5, // 8: country.CountryService.GetCountryById:output_type -> country.Country
	6, // 9: country.CountryService.SearchCountries:output_type -> country.CountriesList
	5, // 10: country.CountryService.AdminCreateCountry:output_type -> country.Country
	5, // 11: country.CountryService.AdminUpdateCountryStatus:output_type -> country.Country
	5, // 12: country.CountryService.AdminUpdateCountryName:output_type -> country.Country
	8, // [8:13] is the sub-list for method output_type
	3, // [3:8] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_svc_country_country_proto_init() }
func file_svc_country_country_proto_init() {
	if File_svc_country_country_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_svc_country_country_proto_rawDesc), len(file_svc_country_country_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svc_country_country_proto_goTypes,
		DependencyIndexes: file_svc_country_country_proto_depIdxs,
		MessageInfos:      file_svc_country_country_proto_msgTypes,
	}.Build()
	File_svc_country_country_proto = out.File
	file_svc_country_country_proto_goTypes = nil
	file_svc_country_country_proto_depIdxs = nil
}
