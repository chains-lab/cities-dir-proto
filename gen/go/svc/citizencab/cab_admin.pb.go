// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: svc/citizencab/cab_admin.proto

package citizencab

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// REQUESTS
type GetCabinetByAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetCabinetByAdminRequest) Reset() {
	*x = GetCabinetByAdminRequest{}
	mi := &file_svc_citizencab_cab_admin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCabinetByAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCabinetByAdminRequest) ProtoMessage() {}

func (x *GetCabinetByAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_citizencab_cab_admin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCabinetByAdminRequest.ProtoReflect.Descriptor instead.
func (*GetCabinetByAdminRequest) Descriptor() ([]byte, []int) {
	return file_svc_citizencab_cab_admin_proto_rawDescGZIP(), []int{0}
}

func (x *GetCabinetByAdminRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetProfileByAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetProfileByAdminRequest) Reset() {
	*x = GetProfileByAdminRequest{}
	mi := &file_svc_citizencab_cab_admin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProfileByAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileByAdminRequest) ProtoMessage() {}

func (x *GetProfileByAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_citizencab_cab_admin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileByAdminRequest.ProtoReflect.Descriptor instead.
func (*GetProfileByAdminRequest) Descriptor() ([]byte, []int) {
	return file_svc_citizencab_cab_admin_proto_rawDescGZIP(), []int{1}
}

func (x *GetProfileByAdminRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ResetProfileByAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Pseudonym   *bool  `protobuf:"varint,2,opt,name=pseudonym,proto3,oneof" json:"pseudonym,omitempty"`
	Description *bool  `protobuf:"varint,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Avatar      *bool  `protobuf:"varint,4,opt,name=avatar,proto3,oneof" json:"avatar,omitempty"`
}

func (x *ResetProfileByAdminRequest) Reset() {
	*x = ResetProfileByAdminRequest{}
	mi := &file_svc_citizencab_cab_admin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetProfileByAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetProfileByAdminRequest) ProtoMessage() {}

func (x *ResetProfileByAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_citizencab_cab_admin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetProfileByAdminRequest.ProtoReflect.Descriptor instead.
func (*ResetProfileByAdminRequest) Descriptor() ([]byte, []int) {
	return file_svc_citizencab_cab_admin_proto_rawDescGZIP(), []int{2}
}

func (x *ResetProfileByAdminRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ResetProfileByAdminRequest) GetPseudonym() bool {
	if x != nil && x.Pseudonym != nil {
		return *x.Pseudonym
	}
	return false
}

func (x *ResetProfileByAdminRequest) GetDescription() bool {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return false
}

func (x *ResetProfileByAdminRequest) GetAvatar() bool {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return false
}

type UpdateOfficialByAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Official bool   `protobuf:"varint,2,opt,name=official,proto3" json:"official,omitempty"`
}

func (x *UpdateOfficialByAdminRequest) Reset() {
	*x = UpdateOfficialByAdminRequest{}
	mi := &file_svc_citizencab_cab_admin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOfficialByAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOfficialByAdminRequest) ProtoMessage() {}

func (x *UpdateOfficialByAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_citizencab_cab_admin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOfficialByAdminRequest.ProtoReflect.Descriptor instead.
func (*UpdateOfficialByAdminRequest) Descriptor() ([]byte, []int) {
	return file_svc_citizencab_cab_admin_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateOfficialByAdminRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateOfficialByAdminRequest) GetOfficial() bool {
	if x != nil {
		return x.Official
	}
	return false
}

type ResetUsernameByAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *ResetUsernameByAdminRequest) Reset() {
	*x = ResetUsernameByAdminRequest{}
	mi := &file_svc_citizencab_cab_admin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetUsernameByAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetUsernameByAdminRequest) ProtoMessage() {}

func (x *ResetUsernameByAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_citizencab_cab_admin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetUsernameByAdminRequest.ProtoReflect.Descriptor instead.
func (*ResetUsernameByAdminRequest) Descriptor() ([]byte, []int) {
	return file_svc_citizencab_cab_admin_proto_rawDescGZIP(), []int{4}
}

func (x *ResetUsernameByAdminRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ResetUsernameByAdminRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

var File_svc_citizencab_cab_admin_proto protoreflect.FileDescriptor

var file_svc_citizencab_cab_admin_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x73, 0x76, 0x63, 0x2f, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x63, 0x61, 0x62,
	0x2f, 0x63, 0x61, 0x62, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0a, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x63, 0x61, 0x62, 0x1a, 0x20, 0x73, 0x76,
	0x63, 0x2f, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x63, 0x61, 0x62, 0x2f, 0x63, 0x61, 0x62,
	0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x33,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x42, 0x79, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc5, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x09, 0x70, 0x73, 0x65, 0x75, 0x64, 0x6f, 0x6e, 0x79, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x70, 0x73, 0x65, 0x75, 0x64, 0x6f, 0x6e, 0x79, 0x6d,
	0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x73, 0x65, 0x75,
	0x64, 0x6f, 0x6e, 0x79, 0x6d, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x22, 0x53, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x6c, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x6c, 0x22, 0x52, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0x90, 0x02, 0x0a, 0x0c, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x13, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x12, 0x26, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x63, 0x61, 0x62, 0x2e, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x69, 0x74, 0x69,
	0x7a, 0x65, 0x6e, 0x63, 0x61, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x54,
	0x0a, 0x14, 0x52, 0x65, 0x73, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x27, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e,
	0x63, 0x61, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x63, 0x61, 0x62, 0x2e, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x56, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66,
	0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x28, 0x2e,
	0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x63, 0x61, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65,
	0x6e, 0x63, 0x61, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x46, 0x5a, 0x44,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x73, 0x2d, 0x6c, 0x61, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x76, 0x63, 0x2f, 0x63,
	0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x63, 0x61, 0x62, 0x3b, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65,
	0x6e, 0x63, 0x61, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_svc_citizencab_cab_admin_proto_rawDescOnce sync.Once
	file_svc_citizencab_cab_admin_proto_rawDescData = file_svc_citizencab_cab_admin_proto_rawDesc
)

func file_svc_citizencab_cab_admin_proto_rawDescGZIP() []byte {
	file_svc_citizencab_cab_admin_proto_rawDescOnce.Do(func() {
		file_svc_citizencab_cab_admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_svc_citizencab_cab_admin_proto_rawDescData)
	})
	return file_svc_citizencab_cab_admin_proto_rawDescData
}

var file_svc_citizencab_cab_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_svc_citizencab_cab_admin_proto_goTypes = []any{
	(*GetCabinetByAdminRequest)(nil),     // 0: citizencab.GetCabinetByAdminRequest
	(*GetProfileByAdminRequest)(nil),     // 1: citizencab.GetProfileByAdminRequest
	(*ResetProfileByAdminRequest)(nil),   // 2: citizencab.ResetProfileByAdminRequest
	(*UpdateOfficialByAdminRequest)(nil), // 3: citizencab.UpdateOfficialByAdminRequest
	(*ResetUsernameByAdminRequest)(nil),  // 4: citizencab.ResetUsernameByAdminRequest
	(*Profile)(nil),                      // 5: citizencab.Profile
}
var file_svc_citizencab_cab_admin_proto_depIdxs = []int32{
	2, // 0: citizencab.AdminService.ResetProfileByAdmin:input_type -> citizencab.ResetProfileByAdminRequest
	4, // 1: citizencab.AdminService.ResetUsernameByAdmin:input_type -> citizencab.ResetUsernameByAdminRequest
	3, // 2: citizencab.AdminService.UpdateOfficialByAdmin:input_type -> citizencab.UpdateOfficialByAdminRequest
	5, // 3: citizencab.AdminService.ResetProfileByAdmin:output_type -> citizencab.Profile
	5, // 4: citizencab.AdminService.ResetUsernameByAdmin:output_type -> citizencab.Profile
	5, // 5: citizencab.AdminService.UpdateOfficialByAdmin:output_type -> citizencab.Profile
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_svc_citizencab_cab_admin_proto_init() }
func file_svc_citizencab_cab_admin_proto_init() {
	if File_svc_citizencab_cab_admin_proto != nil {
		return
	}
	file_svc_citizencab_cab_structs_proto_init()
	file_svc_citizencab_cab_admin_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_svc_citizencab_cab_admin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svc_citizencab_cab_admin_proto_goTypes,
		DependencyIndexes: file_svc_citizencab_cab_admin_proto_depIdxs,
		MessageInfos:      file_svc_citizencab_cab_admin_proto_msgTypes,
	}.Build()
	File_svc_citizencab_cab_admin_proto = out.File
	file_svc_citizencab_cab_admin_proto_rawDesc = nil
	file_svc_citizencab_cab_admin_proto_goTypes = nil
	file_svc_citizencab_cab_admin_proto_depIdxs = nil
}
