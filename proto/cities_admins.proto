syntax = "proto3";
package citiesdir;

option go_package = "github.com/chains-lab/cities-dir-proto/gen/go/svc;svc";

import "google/protobuf/empty.proto";
import "common.proto";

service CitiesAdmins {
  // System admin can use this method to create a city admin for any city.
  rpc CreateCityOwnerAdmin (CreateCityOwnerAdminRequestMessage) returns (CityAdmin);
  rpc TransferCityOwnership (TransferCityOwnershipRequestMessage) returns (CityAdmin);

  rpc CreateCityAdmin (CreateCityAdminRequestMessage) returns (CityAdmin);
  rpc UpdateCityAdmin (UpdateCityAdminRequestMessage) returns (CityAdmin);
  rpc DeleteCityAdmin (DeleteCityAdminRequestMessage) returns (google.protobuf.Empty);
  rpc RefuseCityAdmin (google.protobuf.Empty) returns (google.protobuf.Empty);

  rpc GetCityAdmin(GetCityAdminRequestMessage) returns (CityAdmin);
  rpc ListCityAdminsForCity(ListCityAdminsForCityRequestMessage) returns (ListCityAdmins);
}

// REQUESTS

message CreateCityOwnerAdminRequestMessage {
  string city_id = 1;
  string user_id = 2;
}

message TransferCityOwnershipRequestMessage {
  string city_id = 1;
  string new_owner_user_id = 2;
}

message CreateCityAdminRequestMessage {
  string city_id = 1;
  string user_id = 2;
  string role = 3;
}

message UpdateCityAdminRequestMessage {
  string user_id = 1;
  string role = 2;
}

message DeleteCityAdminRequestMessage{
  string user_id = 1;
}

message GetCityAdminRequestMessage {
  string city_id = 1;
  string user_id = 2;
}

message ListCityAdminsForCityRequestMessage {
  string city_id = 1;
  PaginationRequest pagination = 2;
}

// RESPONSES

message CityAdmin {
  string city_id = 1;
  string user_id = 2;
  string role = 3;
}

message ListCityAdmins {
  repeated CityAdmin city_admins = 1;
  PaginationResponse pagination = 2;
}