syntax = "proto3";
package elector;

option go_package = "github.com/chains-lab/proto-storage/gen/go/svc/electorcab;electorcab";

import "svc/electorcab/cab_structs.proto";
import "google/protobuf/empty.proto";

service UserService {
  // Own section
  rpc CreateOwnCabinet (CreateCabinetRequest) returns (Cabinet);
  rpc GetOwnCabinet   (google.protobuf.Empty) returns (Cabinet);
  rpc GetOwnProfile   (google.protobuf.Empty) returns (Profile);

  // For other users
  rpc GetCabinet (GetCabinetRequest) returns (Cabinet);
  rpc GetProfile (GetProfileRequest) returns (Profile);
  //TODO rpc SearchProfile (SearchProfileRequest) returns (ProfileList);

  // Update Cabinet
  //
  // Profile
  rpc UpdateOwnProfile (UpdateOwnProfileRequest) returns (Profile);
  rpc UpdateOwnUsername (UpdateOwnUsernameRequest) returns (Profile);
  // Biography
  rpc UpdateOwnSex (UpdateOwnSexRequest) returns (Biography);
  rpc UpdateOwnBirthday (UpdateOwnBirthdayRequest) returns (Biography);
  rpc UpdateOwnNationality (UpdateOwnNationalityRequest) returns (Biography);
  rpc UpdateOwnPrimaryLanguage (UpdateOwnPrimaryLanguageRequest) returns (Biography);
  rpc UpdateOwnResidence (UpdateOwnResidenceRequest) returns (Biography);
  // Job
  rpc UpdateOwnDegree (UpdateOwnDegreeRequest) returns (JobResume);
  rpc UpdateOwnIndustry (UpdateOwnIndustryRequest) returns (JobResume);
  rpc UpdateOwnIncome (UpdateOwnIncomeRequest) returns (JobResume);
}

// REQUESTS
message CreateCabinetRequest {
  string username = 1;
  optional string pseudonym = 2;
  optional string description = 3;
  optional string avatar = 4;
}

message GetProfileRequest {
  oneof identifier {
    string user_id  = 1;
    string username = 2;
  }
}

message GetCabinetRequest {
  oneof identifier {
    string user_id  = 1;
    string username = 2;
  }
}

message SearchProfileRequest {
  string query = 1;
  int32 limit = 2;
  int32 offset = 3;
}

message UpdateOwnProfileRequest {
  optional string pseudonym = 1;
  optional string description = 2;
  optional string avatar = 3;
}

message UpdateOwnUsernameRequest {
  string username = 1;
}


message UpdateOwnSexRequest {
  string sex = 1;
}

message UpdateOwnBirthdayRequest {
  string birthday = 1; // Format: YYYY-MM-DD
}

message UpdateOwnNationalityRequest {
  string nationality = 1;
}

message UpdateOwnPrimaryLanguageRequest {
  string primary_language = 1;
}

message UpdateOwnDegreeRequest {
  string degree = 1;
}

message UpdateOwnIndustryRequest {
  string industry = 1;
}

message UpdateOwnIncomeRequest {
  string income = 1;
}

message UpdateOwnResidenceRequest {
  string country = 1;
  string region = 2;
  string city = 3;
}

