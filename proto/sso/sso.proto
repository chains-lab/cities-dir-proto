syntax = "proto3";
package sso;
option go_package = "github.com/chains-lab/proto-storage/gen/go/sso;sso";

service SsoService {
  rpc GetUser (UserRequest) returns (UserResponse);

  //Google OAuth operations
  rpc GoogleLogin (Empty) returns (GoogleLoginResponse);
  rpc GoogleCallback (GoogleCallbackRequest) returns (TokensPairResponse);

  rpc Logout (SessionRequest) returns (Empty);
  rpc RefreshToken (RefreshTokenRequest) returns (TokensPairResponse);

  rpc GetUserSession (SessionRequest) returns (SessionResponse);
  rpc GetUserSessions (UserRequest) returns (SessionsListResponse);
  rpc DeleteUserSession (SessionRequest) returns (SessionsListResponse);
  rpc TerminateUserSessions (UserRequest) returns (Empty);

  // Admin operations
  rpc AdminTerminateUserSessions (TerminateUserSessionByAdminRequest) returns (Empty);
  rpc AdminUpdateUserRole (UpdateUserRoleRequest) returns (Empty);
  rpc AdminUpdateUserSubscription (UpdateUserSubscriptionRequest) returns (Empty);
  rpc AdminUpdateUserSuspended (UpdateUserSuspendedRequest) returns (Empty);
  rpc AdminUpdateUserVerified (UpdateUserVerifiedRequest) returns (Empty);

}

// Requests
message Empty {}

message UserRequest {
  string user_id = 1;
}

message SessionRequest {
  string user_id = 1;
  string session_id = 2;
}

message RefreshTokenRequest {
  string user_id = 1;
  string session_id = 2;
  string agent = 3;
  string refresh_token = 4;
}

message UpdateUserRoleRequest{
  string initiator_id = 1;
  string user_id = 2;
  string role = 3;
}

message UpdateUserSubscriptionRequest {
  string initiator_id = 1;
  string user_id = 2;
  string subscription = 3;
}

message UpdateUserSuspendedRequest {
  string initiator_id = 1;
  string user_id = 2;
  bool   suspended = 3;
}

message UpdateUserVerifiedRequest {
  string initiator_id = 1;
  string user_id = 2;
  bool   verified = 3;
}

message TerminateUserSessionByAdminRequest {
  string initiator_id = 1;
  string user_id = 2;
}


message GoogleLoginResponse {
  string url = 1;
}

message GoogleCallbackRequest {
  string code = 1;
}

// Responses
message TokensPairResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message UserResponse {
  string id = 1;
  string email = 2;
  string role = 3;
  string subscription = 4;
  bool   verified = 5;
  string created_at = 6;
  string updated_at = 7;
}

message SessionResponse {
  string id = 1;
  string user_id = 2;
  string client = 3;
  string ip = 4;
  string created_at = 5;
  string last_used = 6;
}

message SessionsListResponse {
  repeated SessionResponse sessions = 1;
}

