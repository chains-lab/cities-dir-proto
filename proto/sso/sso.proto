syntax = "proto3";
package sso;
option go_package = "github.com/chains-lab/proto-storage/gen/go/sso;sso";

service SsoService {
  rpc GetUser (UserRequest) returns (UserResponse);

  rpc RefreshToken (RefreshTokenRequest) returns (TokensPairResponse);

  rpc GoogleLogin (Empty) returns (GoogleLoginResponse);
  rpc GoogleCallback (GoogleCallbackRequest) returns (TokensPairResponse);

  rpc Logout (SessionRequest) returns (Empty);

  rpc GetUserSession (SessionRequest) returns (SessionResponse);
  rpc GetUserSessions (UserRequest) returns (SessionsListResponse);
  rpc DeleteUserSession (SessionRequest) returns (SessionsListResponse);
  rpc TerminateUserSessions (UserRequest) returns (Empty);

  rpc AdminDeleteUserSession (AdminSessionRequest) returns (SessionsListResponse);
  rpc AdminTerminateUserSessions (AdminUserRequest) returns (Empty);
}

// Requests
message Empty {}

message UserRequest {
  string user_id = 1;
}

message SessionRequest {
  string user_id = 1;
  string session_id = 2;
}

message RefreshTokenRequest {
  string user_id = 1;
  string session_id = 2;
  string agent = 3;
  string refresh_token = 4;
}

message UpdateUserRoleRequest {
  string user_id = 1;
  string role = 2;
}

message GoogleLoginResponse {
  string url = 1;
}

message GoogleCallbackRequest {
  string code = 1;
}

message AdminUserRequest {
  string initiator_id = 1;
  string user_id = 2;
}

message AdminSessionRequest {
  string initiator_id = 1;
  string user_id = 2;
  string session_id = 3;
}

// Responses
message TokensPairResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message UserResponse {
  string id = 1;
  string email = 2;
  string role = 3;
  string subscription = 4;
  bool   verified = 5;
  string created_at = 6;
  string updated_at = 7;
}

message SessionResponse {
  string id = 1;
  string user_id = 2;
  string client = 3;
  string ip = 4;
  string created_at = 5;
  string last_used = 6;
}

message SessionsListResponse {
  repeated SessionResponse sessions = 1;
}

